<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="接口规则测试" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC zyjk开发环境" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">select 1</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">SqlConnHeBao</stringProp>
        <stringProp name="dbUrl">jdbc:mysql://zyjk-db-dev.mintqtech.com:3306/?allowMultiQueries=true&amp;useUnicode=true&amp;characterEncoding=utf8</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">zyjk%123!</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">zyjkuser</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="全局公共变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="rt" elementType="Argument">
            <stringProp name="Argument.name">rt</stringProp>
            <stringProp name="Argument.value">1562741027</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">1562741027</stringProp>
          </elementProp>
          <elementProp name="jn" elementType="Argument">
            <stringProp name="Argument.name">jn</stringProp>
            <stringProp name="Argument.value">049D5C6C22B24CA88B92D813EE30B925</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">049D5C6C22B24CA88B92D813EE30B925</stringProp>
          </elementProp>
          <elementProp name="customerRating" elementType="Argument">
            <stringProp name="Argument.name">customerRating</stringProp>
            <stringProp name="Argument.value">A</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">风控登记</stringProp>
          </elementProp>
          <elementProp name="pkgAmt" elementType="Argument">
            <stringProp name="Argument.name">pkgAmt</stringProp>
            <stringProp name="Argument.value">5000</stringProp>
            <stringProp name="Argument.desc">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="loanAmt" elementType="Argument">
            <stringProp name="Argument.name">loanAmt</stringProp>
            <stringProp name="Argument.value">4760</stringProp>
            <stringProp name="Argument.desc">贷款额度</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="usrIdCard" elementType="Argument">
            <stringProp name="Argument.name">usrIdCard</stringProp>
            <stringProp name="Argument.value">140227196010082628</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="bOrdNo" elementType="Argument">
            <stringProp name="Argument.name">bOrdNo</stringProp>
            <stringProp name="Argument.value">101020190719008</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="qryCreditId" elementType="Argument">
            <stringProp name="Argument.name">qryCreditId</stringProp>
            <stringProp name="Argument.value">100000000201908</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="hbUsrNo" elementType="Argument">
            <stringProp name="Argument.name">hbUsrNo</stringProp>
            <stringProp name="Argument.value">hbUsrNo008</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cellPhone" elementType="Argument">
            <stringProp name="Argument.name">cellPhone</stringProp>
            <stringProp name="Argument.value">17813220008</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="Content-Type" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="开发环境请求地址" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">zyjk-gateway-dev.mintqtech.com</stringProp>
        <stringProp name="HTTPSampler.port">9901</stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Case——授信申请接口" enabled="true"/>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="当前接口参数" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="requestTm" elementType="Argument">
              <stringProp name="Argument.name">requestTm</stringProp>
              <stringProp name="Argument.value">${rt}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="jrnNo" elementType="Argument">
              <stringProp name="Argument.name">jrnNo</stringProp>
              <stringProp name="Argument.value">${jn}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="qryCreditId" elementType="Argument">
              <stringProp name="Argument.name">qryCreditId</stringProp>
              <stringProp name="Argument.value">${qryCreditId}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="hbUsrNo" elementType="Argument">
              <stringProp name="Argument.name">hbUsrNo</stringProp>
              <stringProp name="Argument.value">${hbUsrNo}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="mblNo" elementType="Argument">
              <stringProp name="Argument.name">mblNo</stringProp>
              <stringProp name="Argument.value">${cellPhone}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="usrIdName" elementType="Argument">
              <stringProp name="Argument.name">usrIdName</stringProp>
              <stringProp name="Argument.value">usrIdName</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1122</stringProp>
            </elementProp>
            <elementProp name="usrIdCard" elementType="Argument">
              <stringProp name="Argument.name">usrIdCard</stringProp>
              <stringProp name="Argument.value">${usrIdCard}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">11</stringProp>
            </elementProp>
            <elementProp name="idCardFront" elementType="Argument">
              <stringProp name="Argument.name">idCardFront</stringProp>
              <stringProp name="Argument.value">idCardFront</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="idCardBack" elementType="Argument">
              <stringProp name="Argument.name">idCardBack</stringProp>
              <stringProp name="Argument.value">idCardBack1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="livePicture" elementType="Argument">
              <stringProp name="Argument.name">livePicture</stringProp>
              <stringProp name="Argument.value">livePicture1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="idCardFrontID" elementType="Argument">
              <stringProp name="Argument.name">idCardFrontID</stringProp>
              <stringProp name="Argument.value">idFront</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="idCardBackID" elementType="Argument">
              <stringProp name="Argument.name">idCardBackID</stringProp>
              <stringProp name="Argument.value">idBack</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="livePictureID" elementType="Argument">
              <stringProp name="Argument.name">livePictureID</stringProp>
              <stringProp name="Argument.value">idLive</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="idCardFrontUrl" elementType="Argument">
              <stringProp name="Argument.name">idCardFrontUrl</stringProp>
              <stringProp name="Argument.value">idCardFrontUrl</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="idCardBackUrl" elementType="Argument">
              <stringProp name="Argument.name">idCardBackUrl</stringProp>
              <stringProp name="Argument.value">idCardBackUrl</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="livePictureUrl" elementType="Argument">
              <stringProp name="Argument.name">livePictureUrl</stringProp>
              <stringProp name="Argument.value">livePictureUrl</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="zipCode" elementType="Argument">
              <stringProp name="Argument.name">zipCode</stringProp>
              <stringProp name="Argument.value">zipCode</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="addressCode" elementType="Argument">
              <stringProp name="Argument.name">addressCode</stringProp>
              <stringProp name="Argument.value">addressCode</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="address" elementType="Argument">
              <stringProp name="Argument.name">address</stringProp>
              <stringProp name="Argument.value">address</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="inCome" elementType="Argument">
              <stringProp name="Argument.name">inCome</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="usrJob" elementType="Argument">
              <stringProp name="Argument.name">usrJob</stringProp>
              <stringProp name="Argument.value">014</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="contactName" elementType="Argument">
              <stringProp name="Argument.name">contactName</stringProp>
              <stringProp name="Argument.value">contactName</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="contactMblNo" elementType="Argument">
              <stringProp name="Argument.name">contactMblNo</stringProp>
              <stringProp name="Argument.value">17814551234</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="contactRelation" elementType="Argument">
              <stringProp name="Argument.name">contactRelation</stringProp>
              <stringProp name="Argument.value">contactRelation</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="bankCardNo" elementType="Argument">
              <stringProp name="Argument.name">bankCardNo</stringProp>
              <stringProp name="Argument.value">622134567876218</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="bankCardName" elementType="Argument">
              <stringProp name="Argument.name">bankCardName</stringProp>
              <stringProp name="Argument.value">bankCardName</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="bankMblNo" elementType="Argument">
              <stringProp name="Argument.name">bankMblNo</stringProp>
              <stringProp name="Argument.value">17813441235</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="bankCode" elementType="Argument">
              <stringProp name="Argument.name">bankCode</stringProp>
              <stringProp name="Argument.value">ICBC</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="companyName" elementType="Argument">
              <stringProp name="Argument.name">companyName</stringProp>
              <stringProp name="Argument.value">companyName</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="companyAddress" elementType="Argument">
              <stringProp name="Argument.name">companyAddress</stringProp>
              <stringProp name="Argument.value">companyAddress</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="companyAddressCode" elementType="Argument">
              <stringProp name="Argument.name">companyAddressCode</stringProp>
              <stringProp name="Argument.value">Address</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">11      存了两次，但存的不符合要求2</stringProp>
            </elementProp>
            <elementProp name="companyMblNo" elementType="Argument">
              <stringProp name="Argument.name">companyMblNo</stringProp>
              <stringProp name="Argument.value">010-98781236</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="liveOrgNm" elementType="Argument">
              <stringProp name="Argument.name">liveOrgNm</stringProp>
              <stringProp name="Argument.value">liveOrgNm</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="liveOrgId" elementType="Argument">
              <stringProp name="Argument.name">liveOrgId</stringProp>
              <stringProp name="Argument.value">liveOrgId</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="liveScore" elementType="Argument">
              <stringProp name="Argument.name">liveScore</stringProp>
              <stringProp name="Argument.value">liveScore</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="schooling" elementType="Argument">
              <stringProp name="Argument.name">schooling</stringProp>
              <stringProp name="Argument.value">002</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appId" elementType="Argument">
              <stringProp name="Argument.name">appId</stringProp>
              <stringProp name="Argument.value">HB</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="socialIdentity" elementType="Argument">
              <stringProp name="Argument.name">socialIdentity</stringProp>
              <stringProp name="Argument.value">003</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="hbScore" elementType="Argument">
              <stringProp name="Argument.name">hbScore</stringProp>
              <stringProp name="Argument.value">100</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="creditTotScore" elementType="Argument">
              <stringProp name="Argument.name">creditTotScore</stringProp>
              <stringProp name="Argument.value">101</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="creditModScore" elementType="Argument">
              <stringProp name="Argument.name">creditModScore</stringProp>
              <stringProp name="Argument.value">102</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="oprId" elementType="Argument">
              <stringProp name="Argument.name">oprId</stringProp>
              <stringProp name="Argument.value">1098765001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="oprMblNo" elementType="Argument">
              <stringProp name="Argument.name">oprMblNo</stringProp>
              <stringProp name="Argument.value">13709823456</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="regDt" elementType="Argument">
              <stringProp name="Argument.name">regDt</stringProp>
              <stringProp name="Argument.value">20190717</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="userType" elementType="Argument">
              <stringProp name="Argument.name">userType</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="userStarLvl" elementType="Argument">
              <stringProp name="Argument.name">userStarLvl</stringProp>
              <stringProp name="Argument.value">6</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="applyModelCode" elementType="Argument">
              <stringProp name="Argument.name">applyModelCode</stringProp>
              <stringProp name="Argument.value">45678907345678</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="applyIp" elementType="Argument">
              <stringProp name="Argument.name">applyIp</stringProp>
              <stringProp name="Argument.value">applyIp</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="userMail" elementType="Argument">
              <stringProp name="Argument.name">userMail</stringProp>
              <stringProp name="Argument.value">userMail</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="maritalSta" elementType="Argument">
              <stringProp name="Argument.name">maritalSta</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="idExpDt" elementType="Argument">
              <stringProp name="Argument.name">idExpDt</stringProp>
              <stringProp name="Argument.value">20500980</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="country" elementType="Argument">
              <stringProp name="Argument.name">country</stringProp>
              <stringProp name="Argument.value">中国</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="nation" elementType="Argument">
              <stringProp name="Argument.name">nation</stringProp>
              <stringProp name="Argument.value">nation1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="cusSex" elementType="Argument">
              <stringProp name="Argument.name">cusSex</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="totalBonusAmt" elementType="Argument">
              <stringProp name="Argument.name">totalBonusAmt</stringProp>
              <stringProp name="Argument.value">2000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="applseq" elementType="Argument">
              <stringProp name="Argument.name">applseq</stringProp>
              <stringProp name="Argument.value">190099000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="usrProvNo" elementType="Argument">
              <stringProp name="Argument.name">usrProvNo</stringProp>
              <stringProp name="Argument.value">001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="contactName1" elementType="Argument">
              <stringProp name="Argument.name">contactName1</stringProp>
              <stringProp name="Argument.value">contactName1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="contactMblNo1" elementType="Argument">
              <stringProp name="Argument.name">contactMblNo1</stringProp>
              <stringProp name="Argument.value">13690981239</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="contactRelation1" elementType="Argument">
              <stringProp name="Argument.name">contactRelation1</stringProp>
              <stringProp name="Argument.value">contactRelation1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="contactName2" elementType="Argument">
              <stringProp name="Argument.name">contactName2</stringProp>
              <stringProp name="Argument.value">contactName2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="contactMblNo2" elementType="Argument">
              <stringProp name="Argument.name">contactMblNo2</stringProp>
              <stringProp name="Argument.value">13690981240</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
            <elementProp name="contactRelation2" elementType="Argument">
              <stringProp name="Argument.name">contactRelation2</stringProp>
              <stringProp name="Argument.value">contactRelation2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">12</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/cmpay/credit/v1/apply</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="qryCreditId=====》${caseName}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-859594754">
                <stringProp name="-1028003414">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: ${caseValue}, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="110242961">qryCreditId=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="hbUsrNo=====》${caseName}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-928175835">
                <stringProp name="-807625125">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: ${caseValue}, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="1219247970">hbUsrNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="mblNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="2017830517">
                <stringProp name="1799672798">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: ${caseValue}, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="-643582715">mblNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="usrIdName=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-876041408">
                <stringProp name="-2132502276">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: ${caseValue}, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="64203235">usrIdName=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="usrIdCard=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1828320695">
                <stringProp name="1645338487">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: ${caseValue}, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="-1190976514">usrIdCard=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="idCardFrontID=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1180421865">
                <stringProp name="634944317">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: ${caseValue}, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="1118884100">idCardFrontID=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="idCardBackID=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1046138989">
                <stringProp name="2020182671">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: ${caseValue}, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="-849065904">idCardBackID=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="livePictureID=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1414111463">
                <stringProp name="262864873">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: ${caseValue}, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="803111984">livePictureID=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="zipCode=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1441989653">
                <stringProp name="834125192">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: ${caseValue}, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="597438639">zipCode=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="addressCode=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-2125823427">
                <stringProp name="-213094283">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: ${caseValue}, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="708951484">addressCode=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="address=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="804365771">
                <stringProp name="544336706">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: ${caseValue}, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="-688829911">address=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="inCome=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-435350038">
                <stringProp name="1098176883">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: ${caseValue}, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="953160948">inCome=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="contactName=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1601332624">
                <stringProp name="-1714838613">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: ${caseValue}, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="-1420194766">contactName=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="contactMblNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1845957813">
                <stringProp name="-1549123984">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: ${caseValue}, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="237219141">contactMblNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="contactRelation=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1662624705">
                <stringProp name="2145560314">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: ${caseValue}, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="-2069504799">contactRelation=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="bankCardNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1597954908">
                <stringProp name="12876809">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: ${caseValue}, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="1218669808">bankCardNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="bankCardName=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1455307719">
                <stringProp name="160340049">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: ${caseValue}, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="-21135258">bankCardName=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="bankMblNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-611293233">
                <stringProp name="-2038123526">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: ${caseValue}, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="533844577">bankMblNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="bankCode=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1778875869">
                <stringProp name="1149770071">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: ${caseValue}, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="-196210572">bankCode=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="liveOrgNm=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1421659296">
                <stringProp name="903064767">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: ${caseValue}, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="1040331334">liveOrgNm=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="liveOrgId=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-651712170">
                <stringProp name="-2051620445">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: ${caseValue}, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="1351439978">liveOrgId=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="liveScore=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-344287169">
                <stringProp name="-1940005072">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: ${caseValue}, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="-1617421481">liveScore=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="schooling=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-158726171">
                <stringProp name="1575557192">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: ${caseValue}, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="-1108213393">schooling=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="appId=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1218253300">
                <stringProp name="-500254950">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: ${caseValue}, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="1672158209">appId=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="socialIdentity=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1993333911">
                <stringProp name="1058301233">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: ${caseValue}, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="393080754">socialIdentity=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="regDt=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1981060655">
                <stringProp name="1086958450">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: ${caseValue}, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="-401366055">regDt=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="maritalSta=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-10581746">
                <stringProp name="-644282006">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: ${caseValue}, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="626440337">maritalSta=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="usrProvNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="94485937">
                <stringProp name="1909044856">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: ${caseValue}, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="-863090273">usrProvNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="授信申请接口" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1340434912">
                <stringProp name="-93475185">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;qryCreditId&quot;: &quot;${qryCreditId}&quot;, 	&quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, 	&quot;mblNo&quot;: &quot;${mblNo}&quot;, 	&quot;usrIdName&quot;: &quot;${usrIdName}&quot;, 	&quot;usrIdCard&quot;: &quot;${usrIdCard}&quot;, 	&quot;idCardFront&quot;: &quot;${idCardFront}&quot;, 	&quot;idCardBack&quot;: &quot;${idCardBack}&quot;, 	&quot;livePicture&quot;: &quot;${livePicture}&quot;, 	&quot;idCardFrontID&quot;: &quot;${idCardFrontID}&quot;, 	&quot;idCardBackID&quot;: &quot;${idCardBackID}&quot;, 	&quot;livePictureID&quot;: &quot;${livePictureID}&quot;, 	&quot;idCardFrontUrl&quot;: &quot;${idCardFrontUrl}&quot;, 	&quot;idCardBackUrl&quot;: &quot;${idCardBackUrl}&quot;, 	&quot;livePictureUrl&quot;: &quot;${livePictureUrl}&quot;, 	&quot;zipCode&quot;: &quot;${zipCode}&quot;, 	&quot;addressCode&quot;: &quot;${addressCode}&quot;, 	&quot;address&quot;: &quot;${address}&quot;, 	&quot;inCome&quot;: &quot;${inCome}&quot;, 	&quot;usrJob&quot;: &quot;${usrJob}&quot;, 	&quot;contactName&quot;: &quot;${contactName}&quot;, 	&quot;contactMblNo&quot;: &quot;${contactMblNo}&quot;, 	&quot;contactRelation&quot;: &quot;${contactRelation}&quot;, 	&quot;bankCardNo&quot;: &quot;${bankCardNo}&quot;, 	&quot;bankCardName&quot;: &quot;${bankCardName}&quot;, 	&quot;bankMblNo&quot;: &quot;${bankMblNo}&quot;, 	&quot;bankCode&quot;: &quot;${bankCode}&quot;, 	&quot;companyName&quot;: &quot;${companyName}&quot;, 	&quot;companyAddress&quot;: &quot;${companyAddress}&quot;, 	&quot;companyAddressCode&quot;: &quot;${companyAddressCode}&quot;, 	&quot;companyMblNo&quot;: &quot;${companyMblNo}&quot;, 	&quot;liveOrgNm&quot;: &quot;${liveOrgNm}&quot;, 	&quot;liveOrgId&quot;: &quot;${liveOrgId}&quot;, 	&quot;liveScore&quot;: &quot;${liveScore}&quot;, 	&quot;schooling&quot;: &quot;${schooling}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;, 	&quot;socialIdentity&quot;: &quot;${socialIdentity}&quot;, 	&quot;hbScore&quot;: &quot;${hbScore}&quot;, 	&quot;creditTotScore&quot;: &quot;${creditTotScore}&quot;, 	&quot;creditModScore&quot;: &quot;${creditModScore}&quot;, 	&quot;oprId&quot;: &quot;${oprId}&quot;, 	&quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;, 	&quot;regDt&quot;: &quot;${regDt}&quot;, 	&quot;userType&quot;: &quot;${userType}&quot;, 	&quot;userStarLvl&quot;: &quot;${userStarLvl}&quot;, 	&quot;applyModelCode&quot;: &quot;${applyModelCode}&quot;, 	&quot;applyIp&quot;: &quot;${applyIp}&quot;, 	&quot;userMail&quot;: &quot;${userMail}&quot;, 	&quot;maritalSta&quot;: &quot;${maritalSta}&quot;, 	&quot;idExpDt&quot;: &quot;${idExpDt}&quot;, 	&quot;country&quot;: &quot;${country}&quot;, 	&quot;nation&quot;: &quot;${nation}&quot;, 	&quot;cusSex&quot;: &quot;${cusSex}&quot;, 	&quot;totalBonusAmt&quot;: &quot;${totalBonusAmt}&quot;, 	&quot;applseq&quot;: &quot;${applseq}&quot;, 	&quot;usrProvNo&quot;: &quot;${usrProvNo}&quot;, 	&quot;contactName1&quot;: &quot;${contactName1}&quot;, 	&quot;contactMblNo1&quot;: &quot;${contactMblNo1}&quot;, 	&quot;contactRelation1&quot;: &quot;${contactRelation1}&quot;, 	&quot;contactName2&quot;: &quot;${contactName2}&quot;, 	&quot;contactMblNo2&quot;: &quot;${contactMblNo2}&quot;, 	&quot;contactRelation2&quot;: &quot;${contactRelation2}&quot; }</stringProp>
                <stringProp name="1960604123">授信申请接口</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;00000&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC校验授信--t_zyjk_customer{customerId}" enabled="true">
          <stringProp name="dataSource">SqlConnHeBao</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select id,customer_id,user_name,cell_phone,id_card_no,device_id,channel,device,md5,apply_ip,user_mail,user_star_level,user_type,register_dt,app_id,business_id,create_time,update_time from zyjk.t_zyjk_customer where cell_phone=&apos;${cellPhone}&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">id,customer_id,user_name,cell_phone,id_card_no,device_id,channel,device,md5,apply_ip,user_mail,user_star_level,user_type,register_dt,app_id,business_id,create_time,update_time</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1425648000">
                <stringProp name="-873325165">JDBC校验授信--t_zyjk_customer</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">vars.put(&quot;customerId&quot;,vars.get(&quot;customer_id_1&quot;));
log.info(&quot;当前customer_id=====》&quot;+vars.get(&quot;customerId&quot;));</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="false">
            <stringProp name="BeanShellAssertion.query">
String interfaceName=vars.get(&quot;interface_name&quot;);
log.info(&quot;vars.get(userMail)====&gt;&quot;+vars.get(&quot;userMail&quot;)+&quot;====vars.get(user_mail_1)=====&gt;&quot;+vars.get(&quot;user_mail_1&quot;));
//========以下校验需要补充==================================================
vars.put(&quot;customerId&quot;,vars.get(&quot;customer_id_1&quot;));
if(!&quot;gjfq&quot;.equals(vars.get(&quot;business_id_1&quot;))){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 sql_user_type&quot;;
}
if(!vars.get(&quot;mblNo&quot;).equals(vars.get(&quot;cell_phone_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 sql_cell_phone&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;customer_id_1&quot;))||vars.get(&quot;customer_id_1&quot;)==null){
	log.info(&quot;3&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 sql_customer_id&quot;;
}
if(!vars.get(&quot;usrIdName&quot;).equals(vars.get(&quot;user_name_1&quot;))){
	log.info(&quot;4&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 sql_user_name&quot;;
}
if(!vars.get(&quot;usrIdCard&quot;).equals(vars.get(&quot;id_card_no_1&quot;))){
	log.info(&quot;5&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 sql_id_card_no&quot;;
}
if(!&quot;hbzf&quot;.equals(vars.get(&quot;app_id_1&quot;))){
	log.info(&quot;6&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 sql_app_id&quot;;
}
if(!vars.get(&quot;regDt&quot;).equals(vars.get(&quot;register_dt_1&quot;))){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 sql_register_dt&quot;;
}
if(!vars.get(&quot;userMail&quot;).equals(vars.get(&quot;user_mail_1&quot;))){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 sql_user_mail&quot;;
}
if(!vars.get(&quot;userStarLvl&quot;).equals(vars.get(&quot;user_star_level_1&quot;))){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 sql_user_star_level&quot;;
}
if(!vars.get(&quot;userType&quot;).equals(vars.get(&quot;user_type_1&quot;))){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 sql_user_type&quot;;
}
if(!vars.get(&quot;appId&quot;).equals(vars.get(&quot;channel_1&quot;))){//这个字段是我们自己的标识，写死为[HB]
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 sql_channel&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;create_time_1&quot;))||vars.get(&quot;create_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 create_time_1&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;update_time_1&quot;))||vars.get(&quot;update_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 update_time_1&quot;;
}
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC校验授信--t_zyjk_customer_bankcard_info" enabled="false">
          <stringProp name="dataSource">SqlConnHeBao</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select bank_card_name,bank_card_no,bank_code,bank_name,bind_phone,`status`,create_time,update_time from zyjk.t_zyjk_customer_bankcard_info where customer_id=(select customer_id from zyjk.t_zyjk_customer where cell_phone=&apos;${cellPhone}&apos;);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">bank_card_name,bank_card_no,bank_code,bank_name,bind_phone,status,create_time,update_time</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="955757231">
                <stringProp name="-2137621483">JDBC校验授信--t_zyjk_customer_bankcard_info</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">
String interfaceName=vars.get(&quot;interface_name&quot;);

//========以下校验需要补充==================================================
if(!vars.get(&quot;bankMblNo&quot;).equals(vars.get(&quot;bind_phone_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 bind_phone_1&quot;;
}
if(!vars.get(&quot;bankCardName&quot;).equals(vars.get(&quot;bank_card_name_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 bank_card_name_1&quot;;
}
if(!vars.get(&quot;bankCode&quot;).equals(vars.get(&quot;bank_name_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 bank_name_1&quot;;
}
if(!vars.get(&quot;bankCode&quot;).equals(vars.get(&quot;bank_code_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 bank_code_1&quot;;
}
if(!vars.get(&quot;bankCardNo&quot;).equals(vars.get(&quot;bank_card_no_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 bank_card_no_1&quot;;
}
if(!vars.get(&quot;bankCardNo&quot;).equals(vars.get(&quot;bank_card_no_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 bank_card_no_1&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;create_time_1&quot;))||vars.get(&quot;create_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 create_time_1&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;update_time_1&quot;))||vars.get(&quot;update_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 update_time_1&quot;;
}

</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC校验授信--t_zyjk_customer_family_info" enabled="false">
          <stringProp name="dataSource">SqlConnHeBao</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select marital_status,marital_status_name,address_code,address_name,address,children_num,family_member_num,households_type,households_type_name,create_time,update_time from zyjk.t_zyjk_customer_family_info where customer_id=(select customer_id from zyjk.t_zyjk_customer where cell_phone=&apos;${cellPhone}&apos;)</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">marital_status,marital_status_name,address_code,address_name,address,children_num,family_member_num,households_type,households_type_name,create_time,update_time</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="531492738">
                <stringProp name="-581896195">JDBC校验授信--t_zyjk_customer_family_info</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">//提取sql值
String sql_marital_status=vars.get(&quot;marital_status_1&quot;);
String sql_marital_status_name=vars.get(&quot;marital_status_name_1&quot;);
String sql_address_code=vars.get(&quot;address_code_1&quot;);
String sql_address_name=vars.get(&quot;address_name_1&quot;);
String sql_address=vars.get(&quot;address_1&quot;);
String sql_children_num=vars.get(&quot;children_num_1&quot;);
String sql_family_member_num=vars.get(&quot;family_member_num_1&quot;);
String sql_households_type=vars.get(&quot;households_type_1&quot;);
String sql_households_type_name=vars.get(&quot;households_type_name_1&quot;);
String sql_create_time=vars.get(&quot;create_time_1&quot;);
String sql_update_time=vars.get(&quot;update_time_1&quot;);

vars.put(&quot;sql_marital_status&quot;,sql_marital_status);
vars.put(&quot;sql_marital_status_name&quot;,sql_marital_status_name);
vars.put(&quot;sql_address_code&quot;,sql_address_code);
vars.put(&quot;sql_address_name&quot;,sql_address_name);
vars.put(&quot;sql_address&quot;,sql_address);
vars.put(&quot;sql_children_num&quot;,sql_children_num);
vars.put(&quot;sql_family_member_num&quot;,sql_family_member_num);
vars.put(&quot;sql_households_type&quot;,sql_households_type);
vars.put(&quot;sql_households_type_name&quot;,sql_households_type_name);
vars.put(&quot;sql_create_time&quot;,sql_create_time);
vars.put(&quot;sql_update_time&quot;,sql_update_time);

</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">
String interfaceName=vars.get(&quot;interface_name&quot;);


//========以下校验需要补充==================================================

if(!vars.get(&quot;maritalSta&quot;).equals(vars.get(&quot;marital_status_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 marital_status_1&quot;;
}
if(&quot;0&quot;.equals(vars.get(&quot;maritalSta&quot;))){
	if(!&quot;未婚&quot;.equals(vars.get(&quot;marital_status_name_1&quot;))){
		log.info(&quot;2&quot;);
		Failure = true;
		FailureMessage=interfaceName+&quot;表插入字段不对 marital_status_name_1&quot;;
	}
}
if(&quot;1&quot;.equals(vars.get(&quot;maritalSta&quot;))){
	if(!&quot;已婚&quot;.equals(vars.get(&quot;marital_status_name_1&quot;))){
		log.info(&quot;2&quot;);
		Failure = true;
		FailureMessage=interfaceName+&quot;表插入字段不对 marital_status_name_1&quot;;
	}
}
if(!vars.get(&quot;addressCode&quot;).equals(vars.get(&quot;address_code_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 address_code_1&quot;;
}
if(!vars.get(&quot;address&quot;).equals(vars.get(&quot;address_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 address_code_1&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;create_time_1&quot;))||vars.get(&quot;create_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 create_time_1&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;update_time_1&quot;))||vars.get(&quot;update_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 update_time_1&quot;;
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC校验授信--t_zyjk_customer_file--身份证正面图片ID" enabled="false">
          <stringProp name="dataSource">SqlConnHeBao</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT
	file_type,
	usage_type,
	pic_file_id,
	third_file_id,
	bucket,
	file_name,
	file_url,
	create_time,
	update_time
FROM
	zyjk.t_zyjk_customer_file
WHERE
	customer_id = (
		SELECT
			customer_id
		FROM
			zyjk.t_zyjk_customer
		WHERE
			cell_phone = &apos;${cellPhone}&apos;
	)
AND pic_file_id = &apos;${idCardFrontID}&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">file_type,usage_type,pic_file_id,third_file_id,bucket,file_name,file_url,create_time,update_time</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1685483647">
                <stringProp name="164818058">JDBC校验授信--t_zyjk_customer_file--身份证正面图片ID</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">String interfaceName=vars.get(&quot;interface_name&quot;);

//========以下校验需要补充==================================================
if(!&quot;PHOTO&quot;.equals(vars.get(&quot;file_type_1&quot;))){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 file_type_1&quot;;
}
if(!vars.get(&quot;idCardFrontID&quot;).equals(vars.get(&quot;pic_file_id_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 pic_file_id_1&quot;;
}
if(!&quot;IDOBVERSE&quot;.equals(vars.get(&quot;usage_type_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 usage_type_1&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;create_time_1&quot;))||vars.get(&quot;create_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 create_time_1&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;update_time_1&quot;))||vars.get(&quot;update_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 update_time_1&quot;;
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC校验授信--t_zyjk_customer_file--身份证反面图片ID" enabled="false">
          <stringProp name="dataSource">SqlConnHeBao</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT
	file_type,
	usage_type,
	pic_file_id,
	third_file_id,
	bucket,
	file_name,
	file_url,
	create_time,
	update_time
FROM
	zyjk.t_zyjk_customer_file
WHERE
	customer_id = (
		SELECT
			customer_id
		FROM
			zyjk.t_zyjk_customer
		WHERE
			cell_phone = &apos;${cellPhone}&apos;
	)
AND pic_file_id = &apos;${idCardBackID}&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">file_type,usage_type,pic_file_id,third_file_id,bucket,file_name,file_url,create_time,update_time</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="905638133">
                <stringProp name="-899303840">JDBC校验授信--t_zyjk_customer_file--身份证反面图片ID</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">String interfaceName=vars.get(&quot;interface_name&quot;);

//========以下校验需要补充==================================================
if(!&quot;PHOTO&quot;.equals(vars.get(&quot;file_type_1&quot;))){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 file_type_1&quot;;
}
if(!vars.get(&quot;idCardBackID&quot;).equals(vars.get(&quot;pic_file_id_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 pic_file_id_1&quot;;
}
if(!&quot;IDREVERSE&quot;.equals(vars.get(&quot;usage_type_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 usage_type_1&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;create_time_1&quot;))||vars.get(&quot;create_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 create_time_1&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;update_time_1&quot;))||vars.get(&quot;update_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 update_time_1&quot;;
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC校验授信--t_zyjk_customer_file--活体照片截图图片ID" enabled="false">
          <stringProp name="dataSource">SqlConnHeBao</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT
	file_type,
	usage_type,
	pic_file_id,
	third_file_id,
	bucket,
	file_name,
	file_url,
	create_time,
	update_time
FROM
	zyjk.t_zyjk_customer_file
WHERE
	customer_id = (
		SELECT
			customer_id
		FROM
			zyjk.t_zyjk_customer
		WHERE
			cell_phone = &apos;${cellPhone}&apos;
	)
AND pic_file_id = &apos;${livePictureID}&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">file_type,usage_type,pic_file_id,third_file_id,bucket,file_name,file_url,create_time,update_time</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1381666342">
                <stringProp name="-345654408">JDBC校验授信--t_zyjk_customer_file--活体照片截图图片ID</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">String interfaceName=vars.get(&quot;interface_name&quot;);

//========以下校验需要补充==================================================
if(!&quot;PHOTO&quot;.equals(vars.get(&quot;file_type_1&quot;))){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 file_type_1&quot;;
}
if(!vars.get(&quot;livePictureID&quot;).equals(vars.get(&quot;pic_file_id_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 pic_file_id_1&quot;;
}
if(!&quot;ENVACTTIVEPHOTO&quot;.equals(vars.get(&quot;usage_type_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 usage_type_1&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;create_time_1&quot;))||vars.get(&quot;create_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 create_time_1&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;update_time_1&quot;))||vars.get(&quot;update_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 update_time_1&quot;;
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC校验授信--t_zyjk_customer_identify_info" enabled="false">
          <stringProp name="dataSource">SqlConnHeBao</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT
	id_card_name,
	id_card_gender,
	id_card_no,
	id_card_nation,
	id_card_birth,
	id_card_address,
	id_card_issuing_authority,
	id_card_validity_sdate,
	id_card_validity_edate,
	live_org_nm,
	live_org_id,
	live_score,
	create_time,
	update_time
FROM
	zyjk.t_zyjk_customer_identify_info
WHERE
	customer_id = (
		SELECT
			customer_id
		FROM
			zyjk.t_zyjk_customer
		WHERE
			cell_phone = &apos;${cellPhone}&apos;
	);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">id_card_name, 	id_card_gender, id_card_no, id_card_nation,id_card_birth,id_card_address,id_card_issuing_authority,id_card_validity_sdate,id_card_validity_edate, live_org_nm,live_org_id,live_score, create_time,update_time</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-2054437027">
                <stringProp name="2125621333">JDBC校验授信--t_zyjk_customer_identify_info</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">String interfaceName=vars.get(&quot;interface_name&quot;);


if(!vars.get(&quot;usrIdName&quot;).equals(vars.get(&quot;id_card_name_1&quot;))){
	log.info(&quot;4&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 sql_user_name&quot;;
}
if(!vars.get(&quot;usrIdCard&quot;).equals(vars.get(&quot;id_card_no_1&quot;))){
  log.info(&quot;2&quot;);
  Failure = true;
  FailureMessage=interfaceName+&quot;表插入字段不对 id_card_no_1&quot;;
}
if(!vars.get(&quot;cusSex&quot;).equals(vars.get(&quot;id_card_gender_1&quot;))){
  log.info(&quot;3&quot;);
  Failure = true;
  FailureMessage=interfaceName+&quot;表插入字段不对 id_card_gender_1&quot;;
}
if(!vars.get(&quot;nation&quot;).equals(vars.get(&quot;id_card_nation_1&quot;))){
  log.info(&quot;4&quot;);
  Failure = true;
  FailureMessage=interfaceName+&quot;表插入字段不对 id_card_nation_1&quot;;
}
if(!vars.get(&quot;liveOrgNm&quot;).equals(vars.get(&quot;live_org_nm_1&quot;))){
  log.info(&quot;5&quot;);
  Failure = true;
  FailureMessage=interfaceName+&quot;表插入字段不对 live_org_nm_1&quot;;
}
if(!vars.get(&quot;liveOrgId&quot;).equals(vars.get(&quot;live_org_id_1&quot;))){
  log.info(&quot;6&quot;);
  Failure = true;
  FailureMessage=interfaceName+&quot;表插入字段不对 live_org_id_1&quot;;
}
if(!vars.get(&quot;liveScore&quot;).equals(vars.get(&quot;live_score_1&quot;))){
  log.info(&quot;7&quot;);
  Failure = true;
  FailureMessage=interfaceName+&quot;表插入字段不对 live_score_1&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;create_time_1&quot;))||vars.get(&quot;create_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 create_time_1&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;update_time_1&quot;))||vars.get(&quot;update_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 update_time_1&quot;;
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC校验授信--t_zyjk_customer_job_info" enabled="false">
          <stringProp name="dataSource">SqlConnHeBao</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select monthly_income,industry,industry_name,position_type,position_type_name,zip_code,company_name,provice_code,provice_name,city_code,city_name,county_code,countyr_name,company_telephone,company_address,create_time,update_time from zyjk.t_zyjk_customer_job_info where customer_id=(select customer_id from zyjk.t_zyjk_customer where cell_phone=&apos;${cellPhone}&apos;);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">monthly_income,industry,industry_name,position_type,position_type_name,zip_code,company_name,provice_code,provice_name,city_code,city_name,county_code,countyr_name,company_telephone,company_address,create_time,update_time</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1093377631">
                <stringProp name="-1050216164">JDBC校验授信--t_zyjk_customer_job_info</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">
String interfaceName=vars.get(&quot;interface_name&quot;);

//========以下校验需要补充==================================================
if(!vars.get(&quot;inCome&quot;).equals(vars.get(&quot;monthly_income_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 monthly_income_1&quot;;
}
if(!vars.get(&quot;usrJob&quot;).equals(vars.get(&quot;industry_name_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 industry_name_1&quot;;
}
if(!vars.get(&quot;zipCode&quot;).equals(vars.get(&quot;zip_code_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 zip_code_1&quot;;
}
if(!vars.get(&quot;companyMblNo&quot;).equals(vars.get(&quot;company_telephone_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 company_telephone_1&quot;;
}
if(!vars.get(&quot;companyAddress&quot;).equals(vars.get(&quot;company_address_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 company_address_1&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;create_time_1&quot;))||vars.get(&quot;create_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 create_time_1&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;update_time_1&quot;))||vars.get(&quot;update_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 update_time_1&quot;;
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC校验授信--t_zyjk_customer_refer_info，第一联系人" enabled="false">
          <stringProp name="dataSource">SqlConnHeBao</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT
	refer_name,
	refer_phone,
	create_time,
	update_time
FROM
	zyjk.t_zyjk_customer_refer_info
WHERE
	customer_id =(select customer_id from zyjk.t_zyjk_customer where cell_phone=&apos;${cellPhone}&apos;)
and relation_ship_name=&apos;${contactRelation}&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">refer_name,refer_phone,create_time,update_time</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="983119782">
                <stringProp name="-1195791220">JDBC校验授信--t_zyjk_customer_refer_info，第一联系人</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">
String interfaceName=vars.get(&quot;interface_name&quot;);


//========以下校验需要补充==================================================
if(!vars.get(&quot;contactName&quot;).equals(vars.get(&quot;refer_name_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 refer_name_1&quot;;
}
if(!vars.get(&quot;contactMblNo&quot;).equals(vars.get(&quot;refer_phone_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 refer_phone_1&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;create_time_1&quot;))||vars.get(&quot;create_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 create_time_1&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;update_time_1&quot;))||vars.get(&quot;update_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 update_time_1&quot;;
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC校验授信--t_zyjk_customer_refer_info，第二联系人" enabled="false">
          <stringProp name="dataSource">SqlConnHeBao</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT
	count(*)
FROM
	zyjk.t_zyjk_customer_refer_info
WHERE
	customer_id =(select customer_id from zyjk.t_zyjk_customer where cell_phone=&apos;${cellPhone}&apos;);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">number</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1481237113">
                <stringProp name="-1191620480">JDBC校验授信--t_zyjk_customer_refer_info，第二联系人</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">
String interfaceName=vars.get(&quot;interface_name&quot;);


//========以下校验需要补充==================================================
if(!&quot;3&quot;.equals(vars.get(&quot;number_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 number_1&quot;;
}
//if(!vars.get(&quot;contactName&quot;).equals(vars.get(&quot;refer_name_1&quot;))){
//	log.info(&quot;2&quot;);
//	Failure = true;
//	FailureMessage=interfaceName+&quot;表插入字段不对 refer_name_1&quot;;
//}
//if(&quot;&quot;.equals(vars.get(&quot;contactMblNo&quot;))||vars.get(&quot;contactMblNo&quot;)==null){
//	Failure = true;
//	FailureMessage=interfaceName+&quot;表插入字段不对 create_time_1&quot;;
//}
//if(&quot;&quot;.equals(vars.get(&quot;create_time_1&quot;))||vars.get(&quot;create_time_1&quot;)==null){
//	Failure = true;
//	FailureMessage=interfaceName+&quot;表插入字段不对 create_time_1&quot;;
//}
//if(&quot;&quot;.equals(vars.get(&quot;update_time_1&quot;))||vars.get(&quot;update_time_1&quot;)==null){
//	Failure = true;
//	FailureMessage=interfaceName+&quot;表插入字段不对 update_time_1&quot;;
//}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC校验授信--t_zyjk_customer_refer_info，第三联系人" enabled="false">
          <stringProp name="dataSource">SqlConnHeBao</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT
	refer_name,
	refer_phone,
	create_time,
	update_time
FROM
	zyjk.t_zyjk_customer_refer_info
WHERE
	customer_id =(select customer_id from zyjk.t_zyjk_customer where cell_phone=&apos;${cellPhone}&apos;)
and relation_ship_name=&apos;${contactRelation2}&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">refer_name,refer_phone,create_time,update_time</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1372194492">
                <stringProp name="-1195523101">JDBC校验授信--t_zyjk_customer_refer_info，第三联系人</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">
String interfaceName=vars.get(&quot;interface_name&quot;);


//========以下校验需要补充==================================================
if(!vars.get(&quot;contactName&quot;).equals(vars.get(&quot;refer_name_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 refer_name_1&quot;;
}
if(!vars.get(&quot;contactMblNo&quot;).equals(vars.get(&quot;refer_phone_1&quot;))){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 refer_phone_1&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;create_time_1&quot;))||vars.get(&quot;create_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 create_time_1&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;update_time_1&quot;))||vars.get(&quot;update_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 update_time_1&quot;;
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC校验授信--t_zyjk_credit_flow" enabled="false">
          <stringProp name="dataSource">SqlConnHeBao</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select qry_credit_id,rc_result,approved_principal,approved_period,rc_deline_reason,rc_time,rc_invalid_time,create_time,update_time from zyjk.t_zyjk_credit_flow where customer_id=(select customer_id from zyjk.t_zyjk_customer where cell_phone=&apos;${cellPhone}&apos;);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">qry_credit_id,rc_result,approved_principal,approved_period,rc_deline_reason,rc_time,rc_invalid_time,create_time,update_time</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="930977699">
                <stringProp name="-1144615713">JDBC校验授信--t_zyjk_credit_flow</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">//提取sql值
String sql_qry_credit_id=vars.get(&quot;qry_credit_id_1&quot;);
String sql_rc_result=vars.get(&quot;rc_result_1&quot;);
String sql_approved_principal=vars.get(&quot;approved_principal_1&quot;);
String sql_approved_period=vars.get(&quot;approved_period_1&quot;);
String sql_rc_deline_reason=vars.get(&quot;rc_deline_reason_1&quot;);
String sql_rc_time=vars.get(&quot;rc_time_1&quot;);
String sql_rc_invalid_time=vars.get(&quot;rc_invalid_time_1&quot;);
String sql_create_time=vars.get(&quot;create_time_1&quot;);
String sql_update_time=vars.get(&quot;update_time_1&quot;);

vars.put(&quot;sql_qry_credit_id&quot;,sql_qry_credit_id);
vars.put(&quot;sql_rc_result&quot;,sql_rc_result);
vars.put(&quot;sql_approved_principal&quot;,sql_approved_principal);
vars.put(&quot;sql_approved_period&quot;,sql_approved_period);
vars.put(&quot;sql_rc_deline_reason&quot;,sql_rc_deline_reason);
vars.put(&quot;sql_rc_time&quot;,sql_rc_time);
vars.put(&quot;sql_rc_invalid_time&quot;,sql_rc_invalid_time);
vars.put(&quot;sql_create_time&quot;,sql_create_time);
vars.put(&quot;sql_update_time&quot;,sql_update_time);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">//获取sql的值
String sql_qry_credit_id=vars.get(&quot;sql_qry_credit_id&quot;);
String sql_rc_result=vars.get(&quot;sql_rc_result&quot;);
String sql_approved_principal=vars.get(&quot;sql_approved_principal&quot;);
String sql_approved_period=vars.get(&quot;sql_approved_period&quot;);
String sql_rc_deline_reason=vars.get(&quot;sql_rc_deline_reason&quot;);
String sql_rc_time=vars.get(&quot;sql_rc_time&quot;);
String sql_rc_invalid_time=vars.get(&quot;sql_rc_invalid_time&quot;);
String sql_create_time=vars.get(&quot;sql_create_time&quot;);
String sql_update_time=vars.get(&quot;sql_update_time&quot;);

String interfaceName=vars.get(&quot;interface_name&quot;);

log.info(&quot;sql_qry_credit_id======&quot;+sql_qry_credit_id+&quot;sql_rc_result======&quot;+sql_rc_result+&quot;sql_approved_principal======&quot;+sql_approved_principal+&quot;sql_approved_period======&quot;+sql_approved_period
+&quot;sql_rc_deline_reason======&quot;+sql_rc_deline_reason+&quot;sql_rc_time======&quot;+sql_rc_time+&quot;sql_rc_invalid_time======&quot;+sql_rc_invalid_time+&quot;sql_create_time======&quot;+sql_create_time+&quot;sql_update_time======&quot;+sql_update_time);


//========以下校验需要补充==================================================
if(!vars.get(&quot;qryCreditId&quot;).equals(sql_qry_credit_id)){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 sql_qry_credit_id&quot;;
}
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC校验授信--t_zyjk_push_rc_flow" enabled="false">
          <stringProp name="dataSource">SqlConnHeBao</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from zyjk.t_zyjk_push_rc_flow where customer_id=(select customer_id from zyjk.t_zyjk_customer where cell_phone=&apos;${cellPhone}&apos;);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">rc_flow_result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1393148059">
                <stringProp name="447363468">JDBC校验授信--t_zyjk_push_rc_flow</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">//获取sql的值
String sql_qry_credit_id=vars.get(&quot;sql_qry_credit_id&quot;);
String sql_rc_result=vars.get(&quot;sql_rc_result&quot;);
String sql_approved_principal=vars.get(&quot;sql_approved_principal&quot;);
String sql_approved_period=vars.get(&quot;sql_approved_period&quot;);
String sql_rc_deline_reason=vars.get(&quot;sql_rc_deline_reason&quot;);
String sql_rc_time=vars.get(&quot;sql_rc_time&quot;);
String sql_rc_invalid_time=vars.get(&quot;sql_rc_invalid_time&quot;);
String sql_create_time=vars.get(&quot;sql_create_time&quot;);
String sql_update_time=vars.get(&quot;sql_update_time&quot;);

String interfaceName=vars.get(&quot;interface_name&quot;);

log.info(&quot;sql_qry_credit_id======&quot;+sql_qry_credit_id+&quot;sql_rc_result======&quot;+sql_rc_result+&quot;sql_approved_principal======&quot;+sql_approved_principal+&quot;sql_approved_period======&quot;+sql_approved_period
+&quot;sql_rc_deline_reason======&quot;+sql_rc_deline_reason+&quot;sql_rc_time======&quot;+sql_rc_time+&quot;sql_rc_invalid_time======&quot;+sql_rc_invalid_time+&quot;sql_create_time======&quot;+sql_create_time+&quot;sql_update_time======&quot;+sql_update_time);


//========以下校验需要补充==================================================
if(!vars.get(&quot;qryCreditId&quot;).equals(sql_qry_credit_id)){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 sql_qry_credit_id&quot;;
}
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Case——风控回调接口" enabled="true"/>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/rc/credit/v1/rcCallback</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="当前接口参数" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="errCode" elementType="Argument">
              <stringProp name="Argument.name">errCode</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="errMsg" elementType="Argument">
              <stringProp name="Argument.name">errMsg</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="success" elementType="Argument">
              <stringProp name="Argument.name">success</stringProp>
              <stringProp name="Argument.value">true</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="orderNo" elementType="Argument">
              <stringProp name="Argument.name">orderNo</stringProp>
              <stringProp name="Argument.value">100009876</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="riskLevel" elementType="Argument">
              <stringProp name="Argument.name">riskLevel</stringProp>
              <stringProp name="Argument.value">P</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="customerRating" elementType="Argument">
              <stringProp name="Argument.name">customerRating</stringProp>
              <stringProp name="Argument.value">${customerRating}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pipelineGroupId" elementType="Argument">
              <stringProp name="Argument.name">pipelineGroupId</stringProp>
              <stringProp name="Argument.value">101</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="customerId" elementType="Argument">
              <stringProp name="Argument.name">customerId</stringProp>
              <stringProp name="Argument.value">${customerId}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appId" elementType="Argument">
              <stringProp name="Argument.name">appId</stringProp>
              <stringProp name="Argument.value">hbzf</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="businessId" elementType="Argument">
              <stringProp name="Argument.name">businessId</stringProp>
              <stringProp name="Argument.value">gjfq</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="device" elementType="Argument">
              <stringProp name="Argument.name">device</stringProp>
              <stringProp name="Argument.value">ANDROID</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="flowNo" elementType="Argument">
              <stringProp name="Argument.name">flowNo</stringProp>
              <stringProp name="Argument.value">64a4feff-9d28-41df-a086-b33b9bd79170</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="host" elementType="Argument">
              <stringProp name="Argument.name">host</stringProp>
              <stringProp name="Argument.value">10.2.10.195</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="requestTime" elementType="Argument">
              <stringProp name="Argument.name">requestTime</stringProp>
              <stringProp name="Argument.value">1563264314000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="风控回调接口" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1917207873">
                <stringProp name="1781137747">{ 	&quot;errCode&quot;: &quot;${errCode}&quot;, 	&quot;errMsg&quot;: &quot;${errMsg}&quot;, 	&quot;success&quot;:${success}, 	&quot;data&quot;: { 		&quot;appId&quot;: &quot;${appId}&quot;, 		&quot;body&quot;: { 			&quot;orderNo&quot;: &quot;${orderNo}&quot;, 			&quot;riskLevel&quot;: &quot;${riskLevel}&quot;, 			&quot;customerRating&quot;: &quot;${customerRating}&quot;, 			&quot;pipelineGroupId&quot;: ${pipelineGroupId}, 			&quot;customerId&quot;: ${customerId} 		}, 		&quot;businessId&quot;: &quot;${businessId}&quot;, 		&quot;device&quot;: &quot;${device}&quot;, 		&quot;flowNo&quot;: &quot;${flowNo}&quot;, 		&quot;host&quot;: &quot;10.2.10.195&quot;, 		&quot;requestTime&quot;: ${requestTime} 	} }</stringProp>
                <stringProp name="1711521948">风控回调接口</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;00000&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC校验授信--t_zyjk_credit_flow" enabled="true">
          <stringProp name="dataSource">SqlConnHeBao</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select customer_id,rc_result,approved_principal,approved_period,rc_time,rc_invalid_time,hb_usr_no,credit_status,customer_rating from zyjk.t_zyjk_credit_flow where qry_credit_id=&apos;${qryCreditId}&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">customer_id,rc_result,approved_principal,approved_period,rc_time,rc_invalid_time,hb_usr_no,credit_status,customer_rating</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="930977699">
                <stringProp name="-1144615713">JDBC校验授信--t_zyjk_credit_flow</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">String interfaceName=vars.get(&quot;interface_name&quot;);

vars.put(&quot;approved_principal&quot;,vars.get(&quot;approved_principal_1&quot;));
vars.put(&quot;approved_period&quot;,vars.get(&quot;approved_period_1&quot;));

//========以下校验需要补充==================================================
if(!vars.get(&quot;customerId&quot;).equals(vars.get(&quot;customer_id_1&quot;))){
	Failure = true;
	FailureMessage=interfaceName+&quot;表字段不对 customer_id_1&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;rc_result_1&quot;))||vars.get(&quot;rc_result_1&quot;)==null){
	log.info(&quot;2&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 sql_cell_phone&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;approved_principal_1&quot;))||vars.get(&quot;approved_principal_1&quot;)==null){
	log.info(&quot;3&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 sql_customer_id&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;approved_period_1&quot;))||vars.get(&quot;approved_period_1&quot;)==null){
	log.info(&quot;3&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 sql_customer_id&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;rc_time_1&quot;))||vars.get(&quot;rc_time_1&quot;)==null){
	log.info(&quot;3&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 sql_customer_id&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;rc_invalid_time_1&quot;))||vars.get(&quot;rc_invalid_time_1&quot;)==null){
	log.info(&quot;3&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 sql_customer_id&quot;;
}
if(!vars.get(&quot;hbUsrNo&quot;).equals(vars.get(&quot;hb_usr_no_1&quot;))){
	log.info(&quot;5&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 sql_id_card_no&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;credit_status_1&quot;))||vars.get(&quot;credit_status_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 create_time_1&quot;;
}
if(!vars.get(&quot;customerRating&quot;).equals(vars.get(&quot;customer_rating_1&quot;))){
	log.info(&quot;5&quot;);
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 sql_id_card_no&quot;;
}


if(&quot;&quot;.equals(vars.get(&quot;create_time_1&quot;))||vars.get(&quot;create_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 create_time_1&quot;;
}
if(&quot;&quot;.equals(vars.get(&quot;update_time_1&quot;))||vars.get(&quot;update_time_1&quot;)==null){
	Failure = true;
	FailureMessage=interfaceName+&quot;表插入字段不对 update_time_1&quot;;
}
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Case——授信结果查询接口" enabled="true"/>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/cmpay/credit/v1/apply/status</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="当前接口参数" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="requestTm" elementType="Argument">
              <stringProp name="Argument.name">requestTm</stringProp>
              <stringProp name="Argument.value">${rt}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="jrnNo" elementType="Argument">
              <stringProp name="Argument.name">jrnNo</stringProp>
              <stringProp name="Argument.value">${jn}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="hbUsrNo" elementType="Argument">
              <stringProp name="Argument.name">hbUsrNo</stringProp>
              <stringProp name="Argument.value">${hbUsrNo}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="qryCreditId" elementType="Argument">
              <stringProp name="Argument.name">qryCreditId</stringProp>
              <stringProp name="Argument.value">${qryCreditId}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appId" elementType="Argument">
              <stringProp name="Argument.name">appId</stringProp>
              <stringProp name="Argument.value">HB</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="hbUsrNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="534624794">
                <stringProp name="-1346926527">{&quot;requestTm&quot;: &quot;${rt}&quot;,&quot;jrnNo&quot;: &quot;${jn}&quot;, &quot;hbUsrNo&quot;: ${caseValue}, &quot;qryCreditId&quot;:&quot;${qryCreditId}&quot;,&quot;appId&quot;:&quot;${appId}&quot;}</stringProp>
                <stringProp name="1219247970">hbUsrNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="qryCreditId=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-957633775">
                <stringProp name="-1858503024">{&quot;requestTm&quot;: &quot;${rt}&quot;,&quot;jrnNo&quot;: &quot;${jn}&quot;, &quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, &quot;qryCreditId&quot;:${caseValue},&quot;appId&quot;:&quot;${appId}&quot;}</stringProp>
                <stringProp name="110242961">qryCreditId=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="appId=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="2105762572">
                <stringProp name="-1471835894">{&quot;requestTm&quot;: &quot;${rt}&quot;,&quot;jrnNo&quot;: &quot;${jn}&quot;, &quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, &quot;qryCreditId&quot;:&quot;${qryCreditId}&quot;,&quot;appId&quot;:${caseValue}}</stringProp>
                <stringProp name="1672158209">appId=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="授信结果查询接口" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1678412996">
                <stringProp name="313746293">{&quot;requestTm&quot;: &quot;${rt}&quot;,&quot;jrnNo&quot;: &quot;${jn}&quot;, &quot;hbUsrNo&quot;: &quot;${hbUsrNo}&quot;, &quot;qryCreditId&quot;:&quot;${qryCreditId}&quot;,&quot;appId&quot;:&quot;${appId}&quot;}</stringProp>
                <stringProp name="514396029">授信结果查询接口</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;00000&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Case——借款实际出资方预查询接口" enabled="true">
        <stringProp name="TestPlan.comments">29</stringProp>
      </TestFragmentController>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">HTTP</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/cmpay/quota/v1/actualOrgPreQuery</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="103689624">mblNo</stringProp>
            <stringProp name="698796443">hbUsrNo</stringProp>
            <stringProp name="576247451">brwOrdNo</stringProp>
            <stringProp name="576247146">brwOrdDt</stringProp>
            <stringProp name="-1051830514">productNm</stringProp>
            <stringProp name="-1051830678">productId</stringProp>
            <stringProp name="-986551204">pkgAmt</stringProp>
            <stringProp name="336910008">loanAmt</stringProp>
            <stringProp name="1659110256">loanMonth</stringProp>
            <stringProp name="-1240248648">goodId</stringProp>
            <stringProp name="-1240248484">goodNm</stringProp>
            <stringProp name="105959340">oprId</stringProp>
            <stringProp name="-162523801">oprMblNo</stringProp>
            <stringProp name="95470986">depId</stringProp>
            <stringProp name="95471150">depNm</stringProp>
            <stringProp name="370564993">depMngMblNo</stringProp>
            <stringProp name="93028124">appId</stringProp>
            <stringProp name="-1831274264">applyModelCode</stringProp>
            <stringProp name="-793220811">applyIp</stringProp>
            <stringProp name="-1442724893">mngModel</stringProp>
            <stringProp name="-1377747989">busTyp</stringProp>
            <stringProp name="-1706401799">depProvNo</stringProp>
            <stringProp name="-2086740613">depCityNo</stringProp>
            <stringProp name="916236966">depRegNo</stringProp>
            <stringProp name="941664867">actBrwMblNo</stringProp>
            <stringProp name="-1460846682">actBrwHbUsrNo</stringProp>
            <stringProp name="1692826129">actBrwIdNo</stringProp>
            <stringProp name="693933416">requestTm</stringProp>
            <stringProp name="101397639">jrnNo</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="200192123">
              <stringProp name="1221916904">${cellPhone}</stringProp>
              <stringProp name="-1570265063">${hbUsrNo}</stringProp>
              <stringProp name="-1875455354">${bOrdNo}</stringProp>
              <stringProp name="-1946339243">20190719</stringProp>
              <stringProp name="719834714">套餐描述</stringProp>
              <stringProp name="-825709805">taocanbiaohao</stringProp>
              <stringProp name="-1544860950">${pkgAmt}</stringProp>
              <stringProp name="96157340">${loanAmt}</stringProp>
              <stringProp name="1602">24</stringProp>
              <stringProp name="69163838">HWP30</stringProp>
              <stringProp name="-1183154559">华为P30</stringProp>
              <stringProp name="113223674">y0001</stringProp>
              <stringProp name="782704628">17813221232</stringProp>
              <stringProp name="-708464220">yyt0709</stringProp>
              <stringProp name="1123057317">北京市海淀区万柳中路营业大厅</stringProp>
              <stringProp name="1322225366">13333632813</stringProp>
              <stringProp name="2298">HB</stringProp>
              <stringProp name="-536296853">15701207583</stringProp>
              <stringProp name="485456457">10.8.0.194</stringProp>
              <stringProp name="47665">001</stringProp>
              <stringProp name="48">0</stringProp>
              <stringProp name="1537">01</stringProp>
              <stringProp name="48625">100</stringProp>
              <stringProp name="1449559529">110108</stringProp>
              <stringProp name="1221916904">${cellPhone}</stringProp>
              <stringProp name="-1570265063">${hbUsrNo}</stringProp>
              <stringProp name="-442815755">${usrIdCard}</stringProp>
              <stringProp name="-811840068">${__time(,)}</stringProp>
              <stringProp name="2112949093">2019071000001</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-840272849">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="-131517124">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;} </stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);

String encrypt_Data=Cipher.encrypt(request_json);
log.info(interfaceName+&quot;----加密后的请求数据为=====&gt;&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,encrypt_Data);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.alibaba.fastjson.*;
	
String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=null;

response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

String rspCd=JSON.parseObject(response_data).getString(&quot;rspCd&quot;);
String expect_rspCd=&quot;00000&quot;;
if(!expect_rspCd.equals(rspCd)){
	Failure=true;
	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_rspCd+&quot;，实际响应结果为:&quot;+rspCd;
}
	
String rspInf=JSON.parseObject(response_data).getString(&quot;rspInf&quot;);
String expect_rspInf=&quot;交易成功&quot;;
if(!expect_rspInf.equals(rspInf)){
	Failure=true;
	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_rspInf+&quot;，实际响应结果为:&quot;+rspInf;
}

String actualOrgId=JSON.parseObject(response_data).getString(&quot;actualOrgId&quot;);
vars.put(&quot;actualOrgId&quot;,actualOrgId);
log.info(interfaceName+&quot;----actualOrgId=====&gt;&quot;+vars.get(&quot;actualOrgId&quot;));
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---mblNo===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/cmpay/quota/v1/actualOrgPreQuery</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="115134742">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="-1750962933">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:${caseValue},&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;} </stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">响应码非200！</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---hbUsrNo===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="750273113">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="1750820104">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:${caseValue}} </stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---brwOrdNo===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1383012345">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="-1487915330">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:${caseValue},&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;} </stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---brwOrdDt===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1585208021">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="-2089374375">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:${caseValue},&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---productId===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1542975614">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="-1670819551">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:${caseValue},&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---pkgAmt===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1801413109">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="654683483">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${caseValue},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---loanAmt===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1129085615">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="1703903693">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${caseValue},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---loanMonth===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1996486296">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="-1968368811">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${caseValue},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---goodId===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-560467249">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="-313913989">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:${caseValue},&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---goodNm===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="761453252">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="-661690665">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:${caseValue},&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---oprId===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="446860465">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="1817017567">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:${caseValue},&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---oprMblNo===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-204922119">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="-789710698">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:${caseValue},&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---depId===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-275730109">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="-1367134719">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:${caseValue},&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---depNm===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="125683650">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="-2062715811">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:${caseValue},&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---appId===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-772359765">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="1912215417">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:${caseValue},&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---depMngMblNo===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1419011528">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="-1515263542">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:${caseValue},&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---mngModel===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="539616480">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="-1523977734">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:${caseValue},&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---busTyp===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="317207400">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="-192379078">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:${caseValue},&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---depProvNo===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1727814352">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="1375336182">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:${caseValue},&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---depCityNo===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="502805110">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="1518710840">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:${caseValue},&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---depRegNo===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1590509132">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="-331116893">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:${caseValue},&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---actBrwMblNo===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="484812103">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="245530816">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:${caseValue},&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;} </stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---actBrwHbUsrNo===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="609138512">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="-148484477">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:${caseValue},&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---actBrwIdNo===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-908096107">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="-1084113124">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:${caseValue},&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---requestTm===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">待确定</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-772977391">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="335661731">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:${caseValue},&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.11 借款实际出资方预查询接口---jrnNo===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">待确定</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1012382501">
                <stringProp name="444562146">3.1.2.11 借款实际出资方预查询接口</stringProp>
                <stringProp name="1630080004">{&quot;productNm&quot;:&quot;${productNm}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;,&quot;busTyp&quot;:&quot;${busTyp}&quot;,&quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;,&quot;jrnNo&quot;:${caseValue},&quot;applyIp&quot;:&quot;${applyIp}&quot;,&quot;goodNm&quot;:&quot;${goodNm}&quot;,&quot;loanMonth&quot;:${loanMonth},&quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;depNm&quot;:&quot;${depNm}&quot;,&quot;mngModel&quot;:&quot;${mngModel}&quot;,&quot;productId&quot;:&quot;${productId}&quot;,&quot;depCityNo&quot;:&quot;${depCityNo}&quot;,&quot;goodId&quot;:&quot;${goodId}&quot;,&quot;loanAmt&quot;:${loanAmt},&quot;pkgAmt&quot;:${pkgAmt},&quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;depProvNo&quot;:&quot;${depProvNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;,&quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;,&quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;,&quot;depId&quot;:&quot;${depId}&quot;,&quot;depRegNo&quot;:&quot;${depRegNo}&quot;,&quot;oprId&quot;:&quot;${oprId}&quot;,&quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Case——借款申请接口" enabled="true"/>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC查询是否存在在途订单" enabled="true">
          <stringProp name="dataSource">SqlConnHeBao</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT COUNT(1) FROM zyjk.t_zyjk_loan_info WHERE customer_id = &apos;${customerId}&apos; AND loan_status IN (&apos;CREATED&apos;,&apos;FUNDED&apos;,&apos;OVERDUE&apos;,&apos;UNIT_SUCESS&apos;) AND app_id = &apos;hbzf&apos; AND business_id = &apos;gjfq&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">count</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1647248468">
                <stringProp name="-1133189858">JDBC查询是否存在在途订单</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">vars.put(&quot;count&quot;,vars.get(&quot;count_1&quot;));
log.info(&quot;当前在途订单数count=====》&quot;+vars.get(&quot;count&quot;));</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="当前接口参数" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="requestTm" elementType="Argument">
              <stringProp name="Argument.name">requestTm</stringProp>
              <stringProp name="Argument.value">${rt}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="jrnNo" elementType="Argument">
              <stringProp name="Argument.name">jrnNo</stringProp>
              <stringProp name="Argument.value">${jn}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="mblNo" elementType="Argument">
              <stringProp name="Argument.name">mblNo</stringProp>
              <stringProp name="Argument.value">${cellPhone}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="hbUsrNo" elementType="Argument">
              <stringProp name="Argument.name">hbUsrNo</stringProp>
              <stringProp name="Argument.value">${hbUsrNo}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="brwOrdNo" elementType="Argument">
              <stringProp name="Argument.name">brwOrdNo</stringProp>
              <stringProp name="Argument.value">${bOrdNo}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="brwOrdDt" elementType="Argument">
              <stringProp name="Argument.name">brwOrdDt</stringProp>
              <stringProp name="Argument.value">20190719</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="productNm" elementType="Argument">
              <stringProp name="Argument.name">productNm</stringProp>
              <stringProp name="Argument.value">productNm</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="productId" elementType="Argument">
              <stringProp name="Argument.name">productId</stringProp>
              <stringProp name="Argument.value">productId</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">11</stringProp>
            </elementProp>
            <elementProp name="pkgAmt" elementType="Argument">
              <stringProp name="Argument.name">pkgAmt</stringProp>
              <stringProp name="Argument.value">${pkgAmt}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="loanAmt" elementType="Argument">
              <stringProp name="Argument.name">loanAmt</stringProp>
              <stringProp name="Argument.value">${loanAmt}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="loanMonth" elementType="Argument">
              <stringProp name="Argument.name">loanMonth</stringProp>
              <stringProp name="Argument.value">24</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="goodId" elementType="Argument">
              <stringProp name="Argument.name">goodId</stringProp>
              <stringProp name="Argument.value">goodId</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="goodNm" elementType="Argument">
              <stringProp name="Argument.name">goodNm</stringProp>
              <stringProp name="Argument.value">goodNm</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="oprId" elementType="Argument">
              <stringProp name="Argument.name">oprId</stringProp>
              <stringProp name="Argument.value">oprId</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="oprMblNo" elementType="Argument">
              <stringProp name="Argument.name">oprMblNo</stringProp>
              <stringProp name="Argument.value">13413225021</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="depId" elementType="Argument">
              <stringProp name="Argument.name">depId</stringProp>
              <stringProp name="Argument.value">depId</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="depNm" elementType="Argument">
              <stringProp name="Argument.name">depNm</stringProp>
              <stringProp name="Argument.value">depNm</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="depMngMblNo" elementType="Argument">
              <stringProp name="Argument.name">depMngMblNo</stringProp>
              <stringProp name="Argument.value">13413225024</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appId" elementType="Argument">
              <stringProp name="Argument.name">appId</stringProp>
              <stringProp name="Argument.value">HB</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="applyModelCode" elementType="Argument">
              <stringProp name="Argument.name">applyModelCode</stringProp>
              <stringProp name="Argument.value">applyModelCode</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="applyIp" elementType="Argument">
              <stringProp name="Argument.name">applyIp</stringProp>
              <stringProp name="Argument.value">applyIp</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="mngModel" elementType="Argument">
              <stringProp name="Argument.name">mngModel</stringProp>
              <stringProp name="Argument.value">mngModel</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="busTyp" elementType="Argument">
              <stringProp name="Argument.name">busTyp</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">11</stringProp>
            </elementProp>
            <elementProp name="depProvNo" elementType="Argument">
              <stringProp name="Argument.name">depProvNo</stringProp>
              <stringProp name="Argument.value">depProvNo</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="depCityNo" elementType="Argument">
              <stringProp name="Argument.name">depCityNo</stringProp>
              <stringProp name="Argument.value">depCityNo</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="depRegNo" elementType="Argument">
              <stringProp name="Argument.name">depRegNo</stringProp>
              <stringProp name="Argument.value">depRegNo</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="mercId" elementType="Argument">
              <stringProp name="Argument.name">mercId</stringProp>
              <stringProp name="Argument.value">mercId</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="mercNm" elementType="Argument">
              <stringProp name="Argument.name">mercNm</stringProp>
              <stringProp name="Argument.value">mercNm</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="actBrwMblNo" elementType="Argument">
              <stringProp name="Argument.name">actBrwMblNo</stringProp>
              <stringProp name="Argument.value">${cellPhone}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="actBrwHbUsrNo" elementType="Argument">
              <stringProp name="Argument.name">actBrwHbUsrNo</stringProp>
              <stringProp name="Argument.value">${hbUsrNo}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="actBrwIdNo" elementType="Argument">
              <stringProp name="Argument.name">actBrwIdNo</stringProp>
              <stringProp name="Argument.value">${usrIdCard}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
            <elementProp name="actualOrgId" elementType="Argument">
              <stringProp name="Argument.name">actualOrgId</stringProp>
              <stringProp name="Argument.value">${actualOrgId}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">11</stringProp>
            </elementProp>
            <elementProp name="provStgDay" elementType="Argument">
              <stringProp name="Argument.name">provStgDay</stringProp>
              <stringProp name="Argument.value">05</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/cmpay/quota/v1/freeze</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="mblNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="2075405638">
                <stringProp name="-265554881">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:${caseValue}, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="-643582715">mblNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="hbUsrNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-854761427">
                <stringProp name="1920442402">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;, &quot;hbUsrNo&quot;:${caseValue}, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="1219247970">hbUsrNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="brwOrdNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1912868996">
                <stringProp name="-1616737268">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:${caseValue}, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="-222965150">brwOrdNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="brwOrdDt=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1876070214">
                <stringProp name="-1150925971">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:${caseValue}, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="-1058575501">brwOrdDt=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="productId=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-29353037">
                <stringProp name="1971599441">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:${caseValue}, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="-846984589">productId=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="pkgAmt=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1670582682">
                <stringProp name="430506211">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:${caseValue}, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="1469339329">pkgAmt=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="loanAmt=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="940800944">
                <stringProp name="-1735760225">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:${caseValue}, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="1962962917">loanAmt=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="loanMonth=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1157179248">
                <stringProp name="2078053847">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:${caseValue}, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="432622125">loanMonth=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="goodId=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-606324537">
                <stringProp name="-1267305937">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:${caseValue}, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="-1329530907">goodId=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="goodNm=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-458092497">
                <stringProp name="828748987">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:${caseValue}, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="-1640639551">goodNm=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="oprId=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="380163636">
                <stringProp name="-1010101997">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:${caseValue}, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="-1908474511">oprId=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="oprMblNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1163050726">
                <stringProp name="-104629252">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:${caseValue}, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="-1532852970">oprMblNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="depId=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="804983032">
                <stringProp name="1275802225">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:${caseValue}, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="1823063891">depId=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="depNm=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1977482578">
                <stringProp name="1181700245">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:${caseValue}, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="1511955247">depNm=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="depMngMblNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1946110747">
                <stringProp name="528362312">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:${caseValue}, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="1808429628">depMngMblNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="appId=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-230599119">
                <stringProp name="149202627">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:${caseValue}, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="1672158209">appId=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="mngModel=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1397161353">
                <stringProp name="1114573412">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:${caseValue}, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="124526106">mngModel=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="busTyp=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-887562153">
                <stringProp name="-776055220">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:${caseValue}, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="-470108398">busTyp=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="depProvNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="409210050">
                <stringProp name="578246912">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:${caseValue}, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="2054713540">depProvNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="depCityNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="653947721">
                <stringProp name="1024393410">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:${caseValue}, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="-249403518">depCityNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="depRegNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1400451861">
                <stringProp name="-391703639">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:${caseValue}, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="-833014345">depRegNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="actBrwMblNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="222207852">
                <stringProp name="-308925682">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:${caseValue}, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="321324954">actBrwMblNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="actBrwHbUsrNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1680140502">
                <stringProp name="425752881">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:${caseValue}, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="782581943">actBrwHbUsrNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="actBrwIdNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1951461011">
                <stringProp name="1111261414">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:${caseValue}, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="-100611668">actBrwIdNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="actualOrgId=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="897655076">
                <stringProp name="-102032868">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:${caseValue}, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="1449347468">actualOrgId=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="provStgDay=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="692285850">
                <stringProp name="-686277192">{&quot;requestTm&quot;: ${requestTm},&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:${caseValue}}</stringProp>
                <stringProp name="-195856098">provStgDay=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="借款申请接口" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-699197527">
                <stringProp name="813974550">{&quot;requestTm&quot;: &quot;${requestTm}&quot;,&quot;jrnNo&quot;: &quot;${jrnNo}&quot;,&quot;mblNo&quot;:&quot;${mblNo}&quot;, &quot;hbUsrNo&quot;:&quot;${hbUsrNo}&quot;, &quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;, &quot;productNm&quot;:&quot;${productNm}&quot;, &quot;productId&quot;:&quot;${productId}&quot;, &quot;pkgAmt&quot;:&quot;${pkgAmt}&quot;, &quot;loanAmt&quot;:&quot;${loanAmt}&quot;, &quot;loanMonth&quot;:&quot;${loanMonth}&quot;, &quot;goodId&quot;:&quot;${goodId}&quot;, &quot;goodNm&quot;:&quot;${goodNm}&quot;, &quot;oprId&quot;:&quot;${oprId}&quot;, &quot;oprMblNo&quot;:&quot;${oprMblNo}&quot;, &quot;depId&quot;:&quot;${depId}&quot;, &quot;depNm&quot;:&quot;${depNm}&quot;, &quot;depMngMblNo&quot;:&quot;${depMngMblNo}&quot;, &quot;appId&quot;:&quot;${appId}&quot;, &quot;applyModelCode&quot;:&quot;${applyModelCode}&quot;, &quot;applyIp&quot;:&quot;${applyIp}&quot;, &quot;mngModel&quot;:&quot;${mngModel}&quot;, &quot;busTyp&quot;:&quot;${busTyp}&quot;, &quot;depProvNo&quot;:&quot;${depProvNo}&quot;, &quot;depCityNo&quot;:&quot;${depCityNo}&quot;, &quot;depRegNo&quot;:&quot;${depRegNo}&quot;, &quot;mercId&quot;:&quot;${mercId}&quot;, &quot;mercNm&quot;:&quot;${mercNm}&quot;, &quot;actBrwMblNo&quot;:&quot;${actBrwMblNo}&quot;, &quot;actBrwHbUsrNo&quot;:&quot;${actBrwHbUsrNo}&quot;, &quot;actBrwIdNo&quot;:&quot;${actBrwIdNo}&quot;, &quot;actualOrgId&quot;:&quot;${actualOrgId}&quot;, &quot;provStgDay&quot;:&quot;${provStgDay}&quot;}</stringProp>
                <stringProp name="-684396415">借款申请接口</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;
import com.alibaba.fastjson.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;00000&quot;.equals(rspCd)){
	Failure=true;
}

String brwOrdSts=JSON.parseObject(response_data).getString(&quot;brwOrdSts&quot;);
if(!&quot;0&quot;.equals(vars.get(&quot;count&quot;))){
	if(!&quot;F1&quot;.equals(brwOrdSts)){
		Failure=true;
	}
	
}

//提取
String orgOrdNo=JSON.parseObject(response_data).getString(&quot;orgOrdNo&quot;);
vars.put(&quot;orgOrdNo&quot;,orgOrdNo);
log.info(interface_name+&quot;----orgOrdNo=====&gt;&quot;+vars.get(&quot;orgOrdNo&quot;));

</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Case——借款查询接口" enabled="true"/>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/cmpay/quota/v1/freeze/status</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="当前接口参数" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="requestTm" elementType="Argument">
              <stringProp name="Argument.name">requestTm</stringProp>
              <stringProp name="Argument.value">${rt}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="jrnNo" elementType="Argument">
              <stringProp name="Argument.name">jrnNo</stringProp>
              <stringProp name="Argument.value">${jn}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="brwOrdNo" elementType="Argument">
              <stringProp name="Argument.name">brwOrdNo</stringProp>
              <stringProp name="Argument.value">${bOrdNo}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="brwOrdDt" elementType="Argument">
              <stringProp name="Argument.name">brwOrdDt</stringProp>
              <stringProp name="Argument.value">20190719</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="orgOrdNo" elementType="Argument">
              <stringProp name="Argument.name">orgOrdNo</stringProp>
              <stringProp name="Argument.value">${orgOrdNo}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="brwAmt" elementType="Argument">
              <stringProp name="Argument.name">brwAmt</stringProp>
              <stringProp name="Argument.value">${loanAmt}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appId" elementType="Argument">
              <stringProp name="Argument.name">appId</stringProp>
              <stringProp name="Argument.value">HB</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="brwOrdNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="638771063">
                <stringProp name="-1668807041">{&quot;requestTm&quot;: ${rt},&quot;jrnNo&quot;: &quot;${jn}&quot;, &quot;brwOrdNo&quot;: ${caseValue}, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;, &quot;brwAmt&quot;:&quot;${brwAmt}&quot;, &quot;appId&quot;:&quot;${appId}&quot;}</stringProp>
                <stringProp name="-222965150">brwOrdNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="brwOrdDt=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1533610561">
                <stringProp name="1334972158">{&quot;requestTm&quot;: ${rt},&quot;jrnNo&quot;: &quot;${jn}&quot;, &quot;brwOrdNo&quot;: &quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:${caseValue},&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;, &quot;brwAmt&quot;:&quot;${brwAmt}&quot;, &quot;appId&quot;:&quot;${appId}&quot;}</stringProp>
                <stringProp name="-1058575501">brwOrdDt=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="orgOrdNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="115449371">
                <stringProp name="-649420684">{&quot;requestTm&quot;: ${rt},&quot;jrnNo&quot;: &quot;${jn}&quot;, &quot;brwOrdNo&quot;: &quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;orgOrdNo&quot;:${caseValue}, &quot;brwAmt&quot;:&quot;${brwAmt}&quot;, &quot;appId&quot;:&quot;${appId}&quot;}</stringProp>
                <stringProp name="101721951">orgOrdNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="brwAmt=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-497647135">
                <stringProp name="50992257">{&quot;requestTm&quot;: ${rt},&quot;jrnNo&quot;: &quot;${jn}&quot;, &quot;brwOrdNo&quot;: &quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;, &quot;brwAmt&quot;:${caseValue}, &quot;appId&quot;:&quot;${appId}&quot;}</stringProp>
                <stringProp name="-1072339044">brwAmt=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="appId=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1217197205">
                <stringProp name="-1362103328">{&quot;requestTm&quot;: ${rt},&quot;jrnNo&quot;: &quot;${jn}&quot;, &quot;brwOrdNo&quot;: &quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;, &quot;brwAmt&quot;:&quot;${brwAmt}&quot;, &quot;appId&quot;:${caseValue}}</stringProp>
                <stringProp name="1672158209">appId=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="借款查询接口" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1187424622">
                <stringProp name="692756807">{&quot;requestTm&quot;: &quot;${rt}&quot;,&quot;jrnNo&quot;: &quot;${jn}&quot;, &quot;brwOrdNo&quot;: &quot;${brwOrdNo}&quot;, &quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;, &quot;brwAmt&quot;:&quot;${brwAmt}&quot;, &quot;appId&quot;:&quot;${appId}&quot;}</stringProp>
                <stringProp name="-785884742">借款查询接口</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;00000&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Case——套餐办理通知接口" enabled="true"/>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/cmpay/quota/v1/block</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="当前接口参数" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="requestTm" elementType="Argument">
              <stringProp name="Argument.name">requestTm</stringProp>
              <stringProp name="Argument.value">${rt}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="jrnNo" elementType="Argument">
              <stringProp name="Argument.name">jrnNo</stringProp>
              <stringProp name="Argument.value">${jn}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="acpTm" elementType="Argument">
              <stringProp name="Argument.name">acpTm</stringProp>
              <stringProp name="Argument.value">${__time(yyyyMMddHHmmss,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">20190715113651</stringProp>
            </elementProp>
            <elementProp name="appId" elementType="Argument">
              <stringProp name="Argument.name">appId</stringProp>
              <stringProp name="Argument.value">HB</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="brwOrdDt" elementType="Argument">
              <stringProp name="Argument.name">brwOrdDt</stringProp>
              <stringProp name="Argument.value">20190715123651</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="brwOrdNo" elementType="Argument">
              <stringProp name="Argument.name">brwOrdNo</stringProp>
              <stringProp name="Argument.value">${bOrdNo}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="depId" elementType="Argument">
              <stringProp name="Argument.name">depId</stringProp>
              <stringProp name="Argument.value">depId</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="depNm" elementType="Argument">
              <stringProp name="Argument.name">depNm</stringProp>
              <stringProp name="Argument.value">depNm</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="groupPicture" elementType="Argument">
              <stringProp name="Argument.name">groupPicture</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">groupPicture</stringProp>
            </elementProp>
            <elementProp name="groupPictureId" elementType="Argument">
              <stringProp name="Argument.name">groupPictureId</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">groupPictureId</stringProp>
            </elementProp>
            <elementProp name="groupPictureUrl" elementType="Argument">
              <stringProp name="Argument.name">groupPictureUrl</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">groupPictureUrl</stringProp>
            </elementProp>
            <elementProp name="jrnNo" elementType="Argument">
              <stringProp name="Argument.name">jrnNo</stringProp>
              <stringProp name="Argument.value">jrnNo</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="mblNo" elementType="Argument">
              <stringProp name="Argument.name">mblNo</stringProp>
              <stringProp name="Argument.value">${cellPhone}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="modelCode" elementType="Argument">
              <stringProp name="Argument.name">modelCode</stringProp>
              <stringProp name="Argument.value">modelCode</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="oprId" elementType="Argument">
              <stringProp name="Argument.name">oprId</stringProp>
              <stringProp name="Argument.value">oprId</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="oprMblNo" elementType="Argument">
              <stringProp name="Argument.name">oprMblNo</stringProp>
              <stringProp name="Argument.value">17316083065</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="orgOrdNo" elementType="Argument">
              <stringProp name="Argument.name">orgOrdNo</stringProp>
              <stringProp name="Argument.value">${orgOrdNo}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pickCode" elementType="Argument">
              <stringProp name="Argument.name">pickCode</stringProp>
              <stringProp name="Argument.value">pickCode</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ticketPicture" elementType="Argument">
              <stringProp name="Argument.name">ticketPicture</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">ticketPicture</stringProp>
            </elementProp>
            <elementProp name="ticketPictureId" elementType="Argument">
              <stringProp name="Argument.name">ticketPictureId</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">ticketPictureId</stringProp>
            </elementProp>
            <elementProp name="ticketPictureUrl" elementType="Argument">
              <stringProp name="Argument.name">ticketPictureUrl</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">ticketPictureUrl</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="brwOrdNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-363487679">
                <stringProp name="-629059298">{   &quot;requestTm&quot;: &quot;requestTm&quot;,   &quot;jrnNo&quot;: &quot;jrnNo&quot;,   &quot;acpTm&quot;: &quot;${acpTm}&quot;,   &quot;appId&quot;: &quot;HB&quot;,   &quot;brwOrdDt&quot;: &quot;${brwOrdDt}&quot;,   &quot;brwOrdNo&quot;: ${caseValue},   &quot;depId&quot;: &quot;${depId}&quot;,   &quot;depNm&quot;: &quot;${depNm}&quot;,   &quot;groupPicture&quot;: &quot;${groupPicture}&quot;,   &quot;groupPictureId&quot;: &quot;${groupPictureId}&quot;,   &quot;groupPictureUrl&quot;: &quot;${groupPictureUrl}&quot;,   &quot;mblNo&quot;: &quot;${mblNo}&quot;,   &quot;modelCode&quot;: &quot;${modelCode}&quot;,   &quot;oprId&quot;: &quot;${oprId}&quot;,   &quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;,   &quot;orgOrdNo&quot;: &quot;${orgOrdNo}&quot;,   &quot;pickCode&quot;: &quot;${pickCode}&quot;,   &quot;ticketPicture&quot;: &quot;${ticketPicture}&quot;,   &quot;ticketPictureId&quot;: &quot;${ticketPictureId}&quot;,   &quot;ticketPictureUrl&quot;: &quot;${ticketPictureUrl}&quot; }</stringProp>
                <stringProp name="-222965150">brwOrdNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="brwOrdDt=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="38162351">
                <stringProp name="-1982429077">{   &quot;requestTm&quot;: &quot;requestTm&quot;,   &quot;jrnNo&quot;: &quot;jrnNo&quot;,   &quot;acpTm&quot;: &quot;${acpTm}&quot;,   &quot;appId&quot;: &quot;HB&quot;,   &quot;brwOrdDt&quot;: ${caseValue},   &quot;brwOrdNo&quot;: &quot;${brwOrdNo}&quot;,   &quot;depId&quot;: &quot;${depId}&quot;,   &quot;depNm&quot;: &quot;${depNm}&quot;,   &quot;groupPicture&quot;: &quot;${groupPicture}&quot;,   &quot;groupPictureId&quot;: &quot;${groupPictureId}&quot;,   &quot;groupPictureUrl&quot;: &quot;${groupPictureUrl}&quot;,   &quot;mblNo&quot;: &quot;${mblNo}&quot;,   &quot;modelCode&quot;: &quot;${modelCode}&quot;,   &quot;oprId&quot;: &quot;${oprId}&quot;,   &quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;,   &quot;orgOrdNo&quot;: &quot;${orgOrdNo}&quot;,   &quot;pickCode&quot;: &quot;${pickCode}&quot;,   &quot;ticketPicture&quot;: &quot;${ticketPicture}&quot;,   &quot;ticketPictureId&quot;: &quot;${ticketPictureId}&quot;,   &quot;ticketPictureUrl&quot;: &quot;${ticketPictureUrl}&quot; }</stringProp>
                <stringProp name="-1058575501">brwOrdDt=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="orgOrdNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1645963876">
                <stringProp name="888892441">{   &quot;requestTm&quot;: &quot;requestTm&quot;,   &quot;jrnNo&quot;: &quot;jrnNo&quot;,   &quot;acpTm&quot;: &quot;${acpTm}&quot;,   &quot;appId&quot;: &quot;HB&quot;,   &quot;brwOrdDt&quot;: &quot;${brwOrdDt}&quot;,   &quot;brwOrdNo&quot;: &quot;${brwOrdNo}&quot;,   &quot;depId&quot;: &quot;${depId}&quot;,   &quot;depNm&quot;: &quot;${depNm}&quot;,   &quot;groupPicture&quot;: &quot;${groupPicture}&quot;,   &quot;groupPictureId&quot;: &quot;${groupPictureId}&quot;,   &quot;groupPictureUrl&quot;: &quot;${groupPictureUrl}&quot;,   &quot;mblNo&quot;: &quot;${mblNo}&quot;,   &quot;modelCode&quot;: &quot;${modelCode}&quot;,   &quot;oprId&quot;: &quot;${oprId}&quot;,   &quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;,   &quot;orgOrdNo&quot;: ${caseValue},   &quot;pickCode&quot;: &quot;${pickCode}&quot;,   &quot;ticketPicture&quot;: &quot;${ticketPicture}&quot;,   &quot;ticketPictureId&quot;: &quot;${ticketPictureId}&quot;,   &quot;ticketPictureUrl&quot;: &quot;${ticketPictureUrl}&quot; }</stringProp>
                <stringProp name="101721951">orgOrdNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="acpTm=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="592781231">
                <stringProp name="892426444">{   &quot;requestTm&quot;: &quot;requestTm&quot;,   &quot;jrnNo&quot;: &quot;jrnNo&quot;,   &quot;acpTm&quot;: ${caseValue},   &quot;appId&quot;: &quot;HB&quot;,   &quot;brwOrdDt&quot;: &quot;${brwOrdDt}&quot;,   &quot;brwOrdNo&quot;: &quot;${brwOrdNo}&quot;,   &quot;depId&quot;: &quot;${depId}&quot;,   &quot;depNm&quot;: &quot;${depNm}&quot;,   &quot;groupPicture&quot;: &quot;${groupPicture}&quot;,   &quot;groupPictureId&quot;: &quot;${groupPictureId}&quot;,   &quot;groupPictureUrl&quot;: &quot;${groupPictureUrl}&quot;,   &quot;mblNo&quot;: &quot;${mblNo}&quot;,   &quot;modelCode&quot;: &quot;${modelCode}&quot;,   &quot;oprId&quot;: &quot;${oprId}&quot;,   &quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;,   &quot;orgOrdNo&quot;: &quot;${orgOrdNo}&quot;,   &quot;pickCode&quot;: &quot;${pickCode}&quot;,   &quot;ticketPicture&quot;: &quot;${ticketPicture}&quot;,   &quot;ticketPictureId&quot;: &quot;${ticketPictureId}&quot;,   &quot;ticketPictureUrl&quot;: &quot;${ticketPictureUrl}&quot; }</stringProp>
                <stringProp name="2136591062">acpTm=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="modelCode=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1987995169">
                <stringProp name="1638805179">{   &quot;requestTm&quot;: &quot;requestTm&quot;,   &quot;jrnNo&quot;: &quot;jrnNo&quot;,   &quot;acpTm&quot;: &quot;${acpTm}&quot;,   &quot;appId&quot;: &quot;HB&quot;,   &quot;brwOrdDt&quot;: &quot;${brwOrdDt}&quot;,   &quot;brwOrdNo&quot;: &quot;${brwOrdNo}&quot;,   &quot;depId&quot;: &quot;${depId}&quot;,   &quot;depNm&quot;: &quot;${depNm}&quot;,   &quot;groupPicture&quot;: &quot;${groupPicture}&quot;,   &quot;groupPictureId&quot;: &quot;${groupPictureId}&quot;,   &quot;groupPictureUrl&quot;: &quot;${groupPictureUrl}&quot;,   &quot;mblNo&quot;: &quot;${mblNo}&quot;,   &quot;modelCode&quot;: ${caseValue},   &quot;oprId&quot;: &quot;${oprId}&quot;,   &quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;,   &quot;orgOrdNo&quot;: &quot;${orgOrdNo}&quot;,   &quot;pickCode&quot;: &quot;${pickCode}&quot;,   &quot;ticketPicture&quot;: &quot;${ticketPicture}&quot;,   &quot;ticketPictureId&quot;: &quot;${ticketPictureId}&quot;,   &quot;ticketPictureUrl&quot;: &quot;${ticketPictureUrl}&quot; }</stringProp>
                <stringProp name="1393975719">modelCode=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="appId=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-695098581">
                <stringProp name="-1570352871">{   &quot;requestTm&quot;: &quot;requestTm&quot;,   &quot;jrnNo&quot;: &quot;jrnNo&quot;,   &quot;acpTm&quot;: &quot;${acpTm}&quot;,   &quot;appId&quot;: ${caseValue},   &quot;brwOrdDt&quot;: &quot;${brwOrdDt}&quot;,   &quot;brwOrdNo&quot;: &quot;${brwOrdNo}&quot;,   &quot;depId&quot;: &quot;${depId}&quot;,   &quot;depNm&quot;: &quot;${depNm}&quot;,   &quot;groupPicture&quot;: &quot;${groupPicture}&quot;,   &quot;groupPictureId&quot;: &quot;${groupPictureId}&quot;,   &quot;groupPictureUrl&quot;: &quot;${groupPictureUrl}&quot;,   &quot;mblNo&quot;: &quot;${mblNo}&quot;,   &quot;modelCode&quot;: &quot;${modelCode}&quot;,   &quot;oprId&quot;: &quot;${oprId}&quot;,   &quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;,   &quot;orgOrdNo&quot;: &quot;${orgOrdNo}&quot;,   &quot;pickCode&quot;: &quot;${pickCode}&quot;,   &quot;ticketPicture&quot;: &quot;${ticketPicture}&quot;,   &quot;ticketPictureId&quot;: &quot;${ticketPictureId}&quot;,   &quot;ticketPictureUrl&quot;: &quot;${ticketPictureUrl}&quot; }</stringProp>
                <stringProp name="-222965150">brwOrdNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="pickCode=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1514485467">
                <stringProp name="872858603">{   &quot;requestTm&quot;: &quot;requestTm&quot;,   &quot;jrnNo&quot;: &quot;jrnNo&quot;,   &quot;acpTm&quot;: &quot;${acpTm}&quot;,   &quot;appId&quot;: &quot;HB&quot;,   &quot;brwOrdDt&quot;: &quot;${brwOrdDt}&quot;,   &quot;brwOrdNo&quot;: &quot;${brwOrdNo}&quot;,   &quot;depId&quot;: &quot;${depId}&quot;,   &quot;depNm&quot;: &quot;${depNm}&quot;,   &quot;groupPicture&quot;: &quot;${groupPicture}&quot;,   &quot;groupPictureId&quot;: &quot;${groupPictureId}&quot;,   &quot;groupPictureUrl&quot;: &quot;${groupPictureUrl}&quot;,   &quot;mblNo&quot;: &quot;${mblNo}&quot;,   &quot;modelCode&quot;: &quot;${modelCode}&quot;,   &quot;oprId&quot;: &quot;${oprId}&quot;,   &quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;,   &quot;orgOrdNo&quot;: &quot;${orgOrdNo}&quot;,   &quot;pickCode&quot;: ${caseValue},   &quot;ticketPicture&quot;: &quot;${ticketPicture}&quot;,   &quot;ticketPictureId&quot;: &quot;${ticketPictureId}&quot;,   &quot;ticketPictureUrl&quot;: &quot;${ticketPictureUrl}&quot; }</stringProp>
                <stringProp name="-555931729">pickCode=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="oprId=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1936534453">
                <stringProp name="1674805703">{   &quot;requestTm&quot;: &quot;requestTm&quot;,   &quot;jrnNo&quot;: &quot;jrnNo&quot;,   &quot;acpTm&quot;: &quot;${acpTm}&quot;,   &quot;appId&quot;: &quot;HB&quot;,   &quot;brwOrdDt&quot;: &quot;${brwOrdDt}&quot;,   &quot;brwOrdNo&quot;: &quot;${brwOrdNo}&quot;,   &quot;depId&quot;: &quot;${depId}&quot;,   &quot;depNm&quot;: &quot;${depNm}&quot;,   &quot;groupPicture&quot;: &quot;${groupPicture}&quot;,   &quot;groupPictureId&quot;: &quot;${groupPictureId}&quot;,   &quot;groupPictureUrl&quot;: &quot;${groupPictureUrl}&quot;,   &quot;mblNo&quot;: &quot;${mblNo}&quot;,   &quot;modelCode&quot;: &quot;${modelCode}&quot;,   &quot;oprId&quot;: ${caseValue},   &quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;,   &quot;orgOrdNo&quot;: &quot;${orgOrdNo}&quot;,   &quot;pickCode&quot;: &quot;${pickCode}&quot;,   &quot;ticketPicture&quot;: &quot;${ticketPicture}&quot;,   &quot;ticketPictureId&quot;: &quot;${ticketPictureId}&quot;,   &quot;ticketPictureUrl&quot;: &quot;${ticketPictureUrl}&quot; }</stringProp>
                <stringProp name="-1908474511">oprId=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="oprMblNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-859097732">
                <stringProp name="-652884558">{   &quot;requestTm&quot;: &quot;requestTm&quot;,   &quot;jrnNo&quot;: &quot;jrnNo&quot;,   &quot;acpTm&quot;: &quot;${acpTm}&quot;,   &quot;appId&quot;: &quot;HB&quot;,   &quot;brwOrdDt&quot;: &quot;${brwOrdDt}&quot;,   &quot;brwOrdNo&quot;: &quot;${brwOrdNo}&quot;,   &quot;depId&quot;: &quot;${depId}&quot;,   &quot;depNm&quot;: &quot;${depNm}&quot;,   &quot;groupPicture&quot;: &quot;${groupPicture}&quot;,   &quot;groupPictureId&quot;: &quot;${groupPictureId}&quot;,   &quot;groupPictureUrl&quot;: &quot;${groupPictureUrl}&quot;,   &quot;mblNo&quot;: &quot;${mblNo}&quot;,   &quot;modelCode&quot;: &quot;${modelCode}&quot;,   &quot;oprId&quot;: &quot;${oprId}&quot;,   &quot;oprMblNo&quot;: ${caseValue},   &quot;orgOrdNo&quot;: &quot;${orgOrdNo}&quot;,   &quot;pickCode&quot;: &quot;${pickCode}&quot;,   &quot;ticketPicture&quot;: &quot;${ticketPicture}&quot;,   &quot;ticketPictureId&quot;: &quot;${ticketPictureId}&quot;,   &quot;ticketPictureUrl&quot;: &quot;${ticketPictureUrl}&quot; }</stringProp>
                <stringProp name="-222965150">brwOrdNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="depId=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1866815475">
                <stringProp name="-1930842801">{   &quot;requestTm&quot;: &quot;requestTm&quot;,   &quot;jrnNo&quot;: &quot;jrnNo&quot;,   &quot;acpTm&quot;: &quot;${acpTm}&quot;,   &quot;appId&quot;: &quot;HB&quot;,   &quot;brwOrdDt&quot;: &quot;${brwOrdDt}&quot;,   &quot;brwOrdNo&quot;: &quot;${brwOrdNo}&quot;,   &quot;depId&quot;: ${caseValue},   &quot;depNm&quot;: &quot;${depNm}&quot;,   &quot;groupPicture&quot;: &quot;${groupPicture}&quot;,   &quot;groupPictureId&quot;: &quot;${groupPictureId}&quot;,   &quot;groupPictureUrl&quot;: &quot;${groupPictureUrl}&quot;,   &quot;mblNo&quot;: &quot;${mblNo}&quot;,   &quot;modelCode&quot;: &quot;${modelCode}&quot;,   &quot;oprId&quot;: &quot;${oprId}&quot;,   &quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;,   &quot;orgOrdNo&quot;: &quot;${orgOrdNo}&quot;,   &quot;pickCode&quot;: &quot;${pickCode}&quot;,   &quot;ticketPicture&quot;: &quot;${ticketPicture}&quot;,   &quot;ticketPictureId&quot;: &quot;${ticketPictureId}&quot;,   &quot;ticketPictureUrl&quot;: &quot;${ticketPictureUrl}&quot; }</stringProp>
                <stringProp name="1823063891">depId=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="depNm=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1184823148">
                <stringProp name="482435333">{   &quot;requestTm&quot;: &quot;requestTm&quot;,   &quot;jrnNo&quot;: &quot;jrnNo&quot;,   &quot;acpTm&quot;: &quot;${acpTm}&quot;,   &quot;appId&quot;: &quot;HB&quot;,   &quot;brwOrdDt&quot;: &quot;${brwOrdDt}&quot;,   &quot;brwOrdNo&quot;: &quot;${brwOrdNo}&quot;,   &quot;depId&quot;: &quot;${depId}&quot;,   &quot;depNm&quot;: ${caseValue},   &quot;groupPicture&quot;: &quot;${groupPicture}&quot;,   &quot;groupPictureId&quot;: &quot;${groupPictureId}&quot;,   &quot;groupPictureUrl&quot;: &quot;${groupPictureUrl}&quot;,   &quot;mblNo&quot;: &quot;${mblNo}&quot;,   &quot;modelCode&quot;: &quot;${modelCode}&quot;,   &quot;oprId&quot;: &quot;${oprId}&quot;,   &quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;,   &quot;orgOrdNo&quot;: &quot;${orgOrdNo}&quot;,   &quot;pickCode&quot;: &quot;${pickCode}&quot;,   &quot;ticketPicture&quot;: &quot;${ticketPicture}&quot;,   &quot;ticketPictureId&quot;: &quot;${ticketPictureId}&quot;,   &quot;ticketPictureUrl&quot;: &quot;${ticketPictureUrl}&quot; }</stringProp>
                <stringProp name="1511955247">depNm=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="mblNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="2144056140">
                <stringProp name="-1554314085">{   &quot;requestTm&quot;: &quot;requestTm&quot;,   &quot;jrnNo&quot;: &quot;jrnNo&quot;,   &quot;acpTm&quot;: &quot;${acpTm}&quot;,   &quot;appId&quot;: &quot;HB&quot;,   &quot;brwOrdDt&quot;: &quot;${brwOrdDt}&quot;,   &quot;brwOrdNo&quot;: &quot;${brwOrdNo}&quot;,   &quot;depId&quot;: &quot;${depId}&quot;,   &quot;depNm&quot;: &quot;${depNm}&quot;,   &quot;groupPicture&quot;: &quot;${groupPicture}&quot;,   &quot;groupPictureId&quot;: &quot;${groupPictureId}&quot;,   &quot;groupPictureUrl&quot;: &quot;${groupPictureUrl}&quot;,   &quot;mblNo&quot;: ${caseValue},   &quot;modelCode&quot;: &quot;${modelCode}&quot;,   &quot;oprId&quot;: &quot;${oprId}&quot;,   &quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;,   &quot;orgOrdNo&quot;: &quot;${orgOrdNo}&quot;,   &quot;pickCode&quot;: &quot;${pickCode}&quot;,   &quot;ticketPicture&quot;: &quot;${ticketPicture}&quot;,   &quot;ticketPictureId&quot;: &quot;${ticketPictureId}&quot;,   &quot;ticketPictureUrl&quot;: &quot;${ticketPictureUrl}&quot; }</stringProp>
                <stringProp name="-643582715">mblNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="套餐办理通知接口" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1477905451">
                <stringProp name="-520148404">{   &quot;requestTm&quot;: &quot;requestTm&quot;,   &quot;jrnNo&quot;: &quot;jrnNo&quot;,   &quot;acpTm&quot;: &quot;${acpTm}&quot;,   &quot;appId&quot;: &quot;HB&quot;,   &quot;brwOrdDt&quot;: &quot;${brwOrdDt}&quot;,   &quot;brwOrdNo&quot;: &quot;${brwOrdNo}&quot;,   &quot;depId&quot;: &quot;${depId}&quot;,   &quot;depNm&quot;: &quot;${depNm}&quot;,   &quot;groupPicture&quot;: &quot;${groupPicture}&quot;,   &quot;groupPictureId&quot;: &quot;${groupPictureId}&quot;,   &quot;groupPictureUrl&quot;: &quot;${groupPictureUrl}&quot;,   &quot;mblNo&quot;: &quot;${mblNo}&quot;,   &quot;modelCode&quot;: &quot;${modelCode}&quot;,   &quot;oprId&quot;: &quot;${oprId}&quot;,   &quot;oprMblNo&quot;: &quot;${oprMblNo}&quot;,   &quot;orgOrdNo&quot;: &quot;${orgOrdNo}&quot;,   &quot;pickCode&quot;: &quot;${pickCode}&quot;,   &quot;ticketPicture&quot;: &quot;${ticketPicture}&quot;,   &quot;ticketPictureId&quot;: &quot;${ticketPictureId}&quot;,   &quot;ticketPictureUrl&quot;: &quot;${ticketPictureUrl}&quot; }</stringProp>
                <stringProp name="523808298">套餐办理通知接口</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;00000&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Case——还款计划查询接口" enabled="true"/>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/cmpay/loan/v1/queryRepaymentPlan</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="当前接口参数" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="requestTm" elementType="Argument">
              <stringProp name="Argument.name">requestTm</stringProp>
              <stringProp name="Argument.value">${rt}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="jrnNo" elementType="Argument">
              <stringProp name="Argument.name">jrnNo</stringProp>
              <stringProp name="Argument.value">${jn}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="mplOrdNo" elementType="Argument">
              <stringProp name="Argument.name">mplOrdNo</stringProp>
              <stringProp name="Argument.value">${bOrdNo}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="mplOrdDt" elementType="Argument">
              <stringProp name="Argument.name">mplOrdDt</stringProp>
              <stringProp name="Argument.value">20190719</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appId" elementType="Argument">
              <stringProp name="Argument.name">appId</stringProp>
              <stringProp name="Argument.value">HB</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="mplOrdNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1743899105">
                <stringProp name="-1948477999">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;mplOrdNo&quot;: ${caseValue}, 	&quot;mplOrdDt&quot;: &quot;${mplOrdDt}&quot;, 	&quot;orgOrdNo&quot;: &quot;${orgOrdNo}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;	 }</stringProp>
                <stringProp name="2024041956">mplOrdNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="mplOrdDt=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1044050848">
                <stringProp name="1029958984">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;mplOrdNo&quot;: &quot;${mplOrdNo}&quot;, 	&quot;mplOrdDt&quot;: ${caseValue}, 	&quot;orgOrdNo&quot;: &quot;${orgOrdNo}&quot;, 	&quot;appId&quot;: &quot;${appId}&quot;	 }</stringProp>
                <stringProp name="1188431605">mplOrdDt=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="orgOrdNo=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1929766523">
                <stringProp name="-1678140208">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;mplOrdNo&quot;: &quot;${mplOrdNo}&quot;, 	&quot;mplOrdDt&quot;: &quot;${mplOrdDt}&quot;, 	&quot;orgOrdNo&quot;: ${caseValue}, 	&quot;appId&quot;: &quot;${appId}&quot;	 }</stringProp>
                <stringProp name="101721951">orgOrdNo=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="appId=====》${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-248864145">
                <stringProp name="-283957856">{ 	&quot;requestTm&quot;: &quot;${requestTm}&quot;, 	&quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;mplOrdNo&quot;: &quot;${mplOrdNo}&quot;, 	&quot;mplOrdDt&quot;: &quot;${mplOrdDt}&quot;, 	&quot;orgOrdNo&quot;: &quot;${orgOrdNo}&quot;, 	&quot;appId&quot;: ${caseValue}	 }</stringProp>
                <stringProp name="1672158209">appId=====》${caseName}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;400&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC查询order_no--t_zyjk_loan_info{order_no}" enabled="true">
          <stringProp name="dataSource">SqlConnHeBao</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select order_no from zyjk.t_zyjk_loan_info where brw_order_no=&apos;${bOrdNo}&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">order_no</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-230614917">
                <stringProp name="-359693853">JDBC查询order_no--t_zyjk_loan_info{order_no}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款计划查询接口" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1302622108">
                <stringProp name="-576988">{ &quot;requestTm&quot;: ${requestTm}, &quot;jrnNo&quot;: &quot;${jrnNo}&quot;, 	&quot;mplOrdNo&quot;: &quot;${mplOrdNo}&quot;, &quot;mplOrdDt&quot;: &quot;${mplOrdDt}&quot;, &quot;orgOrdNo&quot;: &quot;${order_no_1}&quot;, &quot;appId&quot;: &quot;${appId}&quot;	 }</stringProp>
                <stringProp name="1925729842">还款计划查询接口</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interface_name+&quot;-----加密前的请求数据为=====&gt;:&quot;+request_json);

//request_json=HeBaoUtil.encrypt(request_json);
//log.info(interface_name+&quot;-----加密后的请求数据为=====&gt;:&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,request_json);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;
import com.mintq.qa.auto.utils.jsonUtils.*;

String interface_name=vars.get(&quot;interface_name&quot;);
String response_data=prev.getResponseDataAsString();

log.info(interface_name+&quot;-----解密前的响应数据为：=====&gt;:&quot;+response_data);

//response_data=HeBaoUtil.decrypt(response_data);
//log.info(interface_name+&quot;-----解密后的响应数据为：=====&gt;:&quot;+response_data);

//断言
String rspCd=Json.parse(response_data).asObject().get(&quot;rspCd&quot;).asString();
if(!&quot;00000&quot;.equals(rspCd)){
	Failure=true;
}

//提取
//String codeId=Json.parse(response_data).asObject().get(&quot;data&quot;).asObject().get(&quot;codeId&quot;).asString();
//vars.put(&quot;codeId&quot;,codeId);</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Case——3.1.2.6 主动还款申请接口" enabled="true"/>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">10.2.11.101</stringProp>
          <stringProp name="HTTPSampler.port">8866</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/cmpay/loan/v1/preview</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="ordMod" elementType="Argument">
              <stringProp name="Argument.name">ordMod</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">1:分期还款</stringProp>
            </elementProp>
            <elementProp name="rpyMod" elementType="Argument">
              <stringProp name="Argument.name">rpyMod</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.desc">当ordMod=1时必传 0：还全部(购机不传) 1：还某期 2：提前清贷 3：退货 </stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="rpySeq" elementType="Argument">
              <stringProp name="Argument.name">rpySeq</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.desc">当rpyMod=1时必传,其余为空</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="576247451">brwOrdNo</stringProp>
            <stringProp name="576247146">brwOrdDt</stringProp>
            <stringProp name="1299878910">orgOrdNo</stringProp>
            <stringProp name="-1008793503">ordMod</stringProp>
            <stringProp name="-924127481">rpyMod</stringProp>
            <stringProp name="-924122012">rpySeq</stringProp>
            <stringProp name="1664569038">orgPlanNo</stringProp>
            <stringProp name="-458952449">actRpyAmt</stringProp>
            <stringProp name="93028124">appId</stringProp>
            <stringProp name="1305463115">orgUsrId</stringProp>
            <stringProp name="693933416">requestTm</stringProp>
            <stringProp name="101397639">jrnNo</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="1765142202">
              <stringProp name="-1875455354">${bOrdNo}</stringProp>
              <stringProp name="-1946339243">20190719</stringProp>
              <stringProp name="-1306783678">${order_no_1}</stringProp>
              <stringProp name="2060595077">${ordMod}</stringProp>
              <stringProp name="390274463">${rpyMod}</stringProp>
              <stringProp name="390444002">${rpySeq}</stringProp>
              <stringProp name="-1567641722">${orgPlanNo}</stringProp>
              <stringProp name="389915545">${rpyAmt}</stringProp>
              <stringProp name="-1305662344">${appId}</stringProp>
              <stringProp name="-1147413093">${orgUsrId}</stringProp>
              <stringProp name="-811840068">${__time(,)}</stringProp>
              <stringProp name="2112949093">2019071000001</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.6 主动还款申请接口" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
              <stringProp name="1731720215">request_data1</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1121529847">
                <stringProp name="354996243">3.1.2.6 主动还款申请接口</stringProp>
                <stringProp name="-1180356548">{&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;orgUsrId&quot;:&quot;${orgUsrId}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;actRpyAmt&quot;:${actRpyAmt},&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpySeq&quot;:${rpySeq}} </stringProp>
                <stringProp name="312268124">{&quot;brwOrdNo&quot;:&quot;666&quot;,&quot;brwOrdDt&quot;:&quot;20180607&quot;,&quot;orgOrdNo&quot;:&quot;123456&quot;,&quot;ordMod&quot;:&quot;2&quot;,&quot;rpyMod&quot;:&quot;1&quot;,&quot;appId&quot;:&quot;HB&quot;, &quot;rpySeq&quot;:&quot;1&quot;,&quot;orgPlanNo&quot;:&quot;10002&quot;,&quot;actRpyAmt&quot;:&quot;243.95&quot;,&quot;orgUsrId&quot;:&quot;1&quot;,&quot;requestTm&quot;:&quot;231231&quot;,&quot;jrnNo&quot;:&quot;323213&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);

String encrypt_Data=Cipher.encrypt(request_json);
log.info(interfaceName+&quot;----加密后的请求数据为=====&gt;&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,encrypt_Data);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.6 主动还款申请接口---brwOrdNo===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1991953296">
                <stringProp name="354996243">3.1.2.6 主动还款申请接口</stringProp>
                <stringProp name="-1294977216">{&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;brwOrdNo&quot;:&quot;${caseValue}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;orgUsrId&quot;:&quot;${orgUsrId}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;actRpyAmt&quot;:${actRpyAmt},&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpySeq&quot;:${rpySeq}} </stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">响应码非200！</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.6 主动还款申请接口---brwOrdDt===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1609183947">
                <stringProp name="354996243">3.1.2.6 主动还款申请接口</stringProp>
                <stringProp name="690978565">{&quot;brwOrdDt&quot;:&quot;${caseValue}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;orgUsrId&quot;:&quot;${orgUsrId}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;actRpyAmt&quot;:${actRpyAmt},&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpySeq&quot;:${rpySeq}} </stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.6 主动还款申请接口---orgOrdNo===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-2098999528">
                <stringProp name="354996243">3.1.2.6 主动还款申请接口</stringProp>
                <stringProp name="-1616213263">{&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${caseValue}&quot;,&quot;orgUsrId&quot;:&quot;${orgUsrId}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;actRpyAmt&quot;:${actRpyAmt},&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpySeq&quot;:${rpySeq}} </stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.6 主动还款申请接口---ordMod===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1372315029">
                <stringProp name="354996243">3.1.2.6 主动还款申请接口</stringProp>
                <stringProp name="-960578882">{&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;orgUsrId&quot;:&quot;${orgUsrId}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;actRpyAmt&quot;:${actRpyAmt},&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;ordMod&quot;:&quot;${caseValue}&quot;,&quot;rpySeq&quot;:${rpySeq}} </stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.6 主动还款申请接口---rpyMod===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-66083525">
                <stringProp name="354996243">3.1.2.6 主动还款申请接口</stringProp>
                <stringProp name="982425372">{&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;orgUsrId&quot;:&quot;${orgUsrId}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;actRpyAmt&quot;:${actRpyAmt},&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${caseValue}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpySeq&quot;:${rpySeq}} </stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.6 主动还款申请接口---rpySeq===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="892362311">
                <stringProp name="354996243">3.1.2.6 主动还款申请接口</stringProp>
                <stringProp name="2044944929">{&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;orgUsrId&quot;:&quot;${orgUsrId}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;actRpyAmt&quot;:${actRpyAmt},&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpySeq&quot;:${caseValue}}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.6 主动还款申请接口---orgPlanNo===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-182132833">
                <stringProp name="354996243">3.1.2.6 主动还款申请接口</stringProp>
                <stringProp name="1347103031">{&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;orgUsrId&quot;:&quot;${orgUsrId}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;orgPlanNo&quot;:&quot;${caseValue}&quot;,&quot;actRpyAmt&quot;:${actRpyAmt},&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpySeq&quot;:${rpySeq}}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.6 主动还款申请接口---actRpyAmt===&gt;${caseName} 非必填" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-73730688">
                <stringProp name="354996243">3.1.2.6 主动还款申请接口</stringProp>
                <stringProp name="-1091683578">{&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;orgUsrId&quot;:&quot;${orgUsrId}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;actRpyAmt&quot;:${caseValue},&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpySeq&quot;:${rpySeq}}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.6 主动还款申请接口---appId===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-304913604">
                <stringProp name="354996243">3.1.2.6 主动还款申请接口</stringProp>
                <stringProp name="253236159">{&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;orgUsrId&quot;:&quot;${orgUsrId}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;appId&quot;:&quot;${caseValue}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;actRpyAmt&quot;:${actRpyAmt},&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpySeq&quot;:${rpySeq}}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.6 主动还款申请接口---orgUsrId===&gt;${caseName}  非必填" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-2121530802">
                <stringProp name="354996243">3.1.2.6 主动还款申请接口</stringProp>
                <stringProp name="80204528">{&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;orgUsrId&quot;:&quot;${caseValue}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;actRpyAmt&quot;:${actRpyAmt},&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpySeq&quot;:${rpySeq}}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.6 主动还款申请接口---requestTm===&gt;${caseName} 非必校验" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1467463204">
                <stringProp name="354996243">3.1.2.6 主动还款申请接口</stringProp>
                <stringProp name="1941784035">{&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;orgUsrId&quot;:&quot;${orgUsrId}&quot;,&quot;requestTm&quot;:&quot;${caseValue}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;actRpyAmt&quot;:${actRpyAmt},&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpySeq&quot;:${rpySeq}} </stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.6 主动还款申请接口---jrnNo===&gt;${caseName} 非必校验" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1606881690">
                <stringProp name="354996243">3.1.2.6 主动还款申请接口</stringProp>
                <stringProp name="1769668222">{&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;orgUsrId&quot;:&quot;${orgUsrId}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;actRpyAmt&quot;:${actRpyAmt},&quot;jrnNo&quot;:&quot;${caseValue}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpySeq&quot;:${rpySeq}}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Case——3.1.2.7 扣款结果通知接口" enabled="true"/>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">10.2.11.101</stringProp>
          <stringProp name="HTTPSampler.port">9901</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/cmpay/loan/v1/repayment</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="576247451">brwOrdNo</stringProp>
            <stringProp name="576247146">brwOrdDt</stringProp>
            <stringProp name="1299878910">orgOrdNo</stringProp>
            <stringProp name="-1008793503">ordMod</stringProp>
            <stringProp name="-924127481">rpyMod</stringProp>
            <stringProp name="-924122012">rpySeq</stringProp>
            <stringProp name="1664569038">orgPlanNo</stringProp>
            <stringProp name="-924139059">rpyAmt</stringProp>
            <stringProp name="973659975">rpyOrdNo</stringProp>
            <stringProp name="973659670">rpyOrdDt</stringProp>
            <stringProp name="-924121545">rpySts</stringProp>
            <stringProp name="-1671073770">isOverdue</stringProp>
            <stringProp name="1738959055">buisnessId</stringProp>
            <stringProp name="1416541996">rpyDesc</stringProp>
            <stringProp name="551119507">capCorg</stringProp>
            <stringProp name="-838449620">crdNoLast</stringProp>
            <stringProp name="1601032069">acPayTyp</stringProp>
            <stringProp name="693933416">requestTm</stringProp>
            <stringProp name="101397639">jrnNo</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-2102898682">
              <stringProp name="2016705099">${brwOrdNo}</stringProp>
              <stringProp name="2016695644">${brwOrdDt}</stringProp>
              <stringProp name="-1306783678">${order_no_1}</stringProp>
              <stringProp name="2060595077">${ordMod}</stringProp>
              <stringProp name="390274463">${rpyMod}</stringProp>
              <stringProp name="390444002">${rpySeq}</stringProp>
              <stringProp name="-1567641722">${orgPlanNo}</stringProp>
              <stringProp name="389915545">${rpyAmt}</stringProp>
              <stringProp name="1451591455">${rpyOrdNo}</stringProp>
              <stringProp name="-1946339252">20190710</stringProp>
              <stringProp name="390458479">${rpySts}</stringProp>
              <stringProp name="-1893353666">${isOverdue}</stringProp>
              <stringProp name="-907145129">${buisnessId}</stringProp>
              <stringProp name="-794989400">${rpyDesc}</stringProp>
              <stringProp name="66530">CCB</stringProp>
              <stringProp name="1630557">5442</stringProp>
              <stringProp name="48625">100</stringProp>
              <stringProp name="-811840068">${__time(,)}</stringProp>
              <stringProp name="2112949093">2019071000001</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.7 扣款结果通知接口" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1889192560">
                <stringProp name="1047176074">3.1.2.7 扣款结果通知接口</stringProp>
                <stringProp name="1726909266">{&quot;rpyDesc&quot;:&quot;${rpyDesc}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;rpyAmt&quot;:${rpyAmt},&quot;acPayTyp&quot;:&quot;${acPayTyp}&quot;,&quot;buisnessId&quot;:&quot;${buisnessId}&quot;,&quot;capCorg&quot;:&quot;${capCorg}&quot;,&quot;crdNoLast&quot;:&quot;${crdNoLast}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;rpySeq&quot;:${rpySeq},&quot;rpyOrdNo&quot;:&quot;${rpyOrdNo}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;isOverdue&quot;:&quot;${isOverdue}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;rpySts&quot;:&quot;${rpySts}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpyOrdDt&quot;:&quot;${rpyOrdDt}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);

String encrypt_Data=Cipher.encrypt(request_json);
log.info(interfaceName+&quot;----加密后的请求数据为=====&gt;&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,encrypt_Data);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.7 扣款结果通知接口---brwOrdNo===&gt;${caseName}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1032797810">
                <stringProp name="1047176074">3.1.2.7 扣款结果通知接口</stringProp>
                <stringProp name="-1535330168">{&quot;rpyDesc&quot;:&quot;${rpyDesc}&quot;,&quot;brwOrdNo&quot;:${caseValue},&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;rpyAmt&quot;:${rpyAmt},&quot;acPayTyp&quot;:&quot;${acPayTyp}&quot;,&quot;buisnessId&quot;:&quot;${buisnessId}&quot;,&quot;capCorg&quot;:&quot;${capCorg}&quot;,&quot;crdNoLast&quot;:&quot;${crdNoLast}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;rpySeq&quot;:${rpySeq},&quot;rpyOrdNo&quot;:&quot;${rpyOrdNo}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;isOverdue&quot;:&quot;${isOverdue}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;rpySts&quot;:&quot;${rpySts}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpyOrdDt&quot;:&quot;${rpyOrdDt}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">响应码非200！</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.7 扣款结果通知接口---brwOrdDt===&gt;${caseName}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-507476857">
                <stringProp name="1047176074">3.1.2.7 扣款结果通知接口</stringProp>
                <stringProp name="-883383079">{&quot;rpyDesc&quot;:&quot;${rpyDesc}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;rpyAmt&quot;:${rpyAmt},&quot;acPayTyp&quot;:&quot;${acPayTyp}&quot;,&quot;buisnessId&quot;:&quot;${buisnessId}&quot;,&quot;capCorg&quot;:&quot;${capCorg}&quot;,&quot;crdNoLast&quot;:&quot;${crdNoLast}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;rpySeq&quot;:${rpySeq},&quot;rpyOrdNo&quot;:&quot;${rpyOrdNo}&quot;,&quot;brwOrdDt&quot;:${caseValue},&quot;isOverdue&quot;:&quot;${isOverdue}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;rpySts&quot;:&quot;${rpySts}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpyOrdDt&quot;:&quot;${rpyOrdDt}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.7 扣款结果通知接口---orgOrdNo===&gt;${caseName}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1394286135">
                <stringProp name="1047176074">3.1.2.7 扣款结果通知接口</stringProp>
                <stringProp name="-1194061779">{&quot;rpyDesc&quot;:&quot;${rpyDesc}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:${caseValue},&quot;rpyAmt&quot;:${rpyAmt},&quot;acPayTyp&quot;:&quot;${acPayTyp}&quot;,&quot;buisnessId&quot;:&quot;${buisnessId}&quot;,&quot;capCorg&quot;:&quot;${capCorg}&quot;,&quot;crdNoLast&quot;:&quot;${crdNoLast}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;rpySeq&quot;:${rpySeq},&quot;rpyOrdNo&quot;:&quot;${rpyOrdNo}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;isOverdue&quot;:&quot;${isOverdue}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;rpySts&quot;:&quot;${rpySts}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpyOrdDt&quot;:&quot;${rpyOrdDt}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.7 扣款结果通知接口---ordMod===&gt;${caseName}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="51925">
                <stringProp name="1047176074">3.1.2.7 扣款结果通知接口</stringProp>
                <stringProp name="-17768966">{&quot;rpyDesc&quot;:&quot;${rpyDesc}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;rpyAmt&quot;:${rpyAmt},&quot;acPayTyp&quot;:&quot;${acPayTyp}&quot;,&quot;buisnessId&quot;:&quot;${buisnessId}&quot;,&quot;capCorg&quot;:&quot;${capCorg}&quot;,&quot;crdNoLast&quot;:&quot;${crdNoLast}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;rpySeq&quot;:${rpySeq},&quot;rpyOrdNo&quot;:&quot;${rpyOrdNo}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;isOverdue&quot;:&quot;${isOverdue}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;rpySts&quot;:&quot;${rpySts}&quot;,&quot;ordMod&quot;:${caseValue},&quot;rpyOrdDt&quot;:&quot;${rpyOrdDt}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.7 扣款结果通知接口---rpyMod===&gt;${caseName}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1412794463">
                <stringProp name="1047176074">3.1.2.7 扣款结果通知接口</stringProp>
                <stringProp name="2022683404">{&quot;rpyDesc&quot;:&quot;${rpyDesc}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;rpyAmt&quot;:${rpyAmt},&quot;acPayTyp&quot;:&quot;${acPayTyp}&quot;,&quot;buisnessId&quot;:&quot;${buisnessId}&quot;,&quot;capCorg&quot;:&quot;${capCorg}&quot;,&quot;crdNoLast&quot;:&quot;${crdNoLast}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:${caseValue},&quot;rpySeq&quot;:${rpySeq},&quot;rpyOrdNo&quot;:&quot;${rpyOrdNo}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;isOverdue&quot;:&quot;${isOverdue}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;rpySts&quot;:&quot;${rpySts}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpyOrdDt&quot;:&quot;${rpyOrdDt}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.7 扣款结果通知接口---rpySeq===&gt;${caseName}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-400436234">
                <stringProp name="1047176074">3.1.2.7 扣款结果通知接口</stringProp>
                <stringProp name="914940767">{&quot;rpyDesc&quot;:&quot;${rpyDesc}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;rpyAmt&quot;:${rpyAmt},&quot;acPayTyp&quot;:&quot;${acPayTyp}&quot;,&quot;buisnessId&quot;:&quot;${buisnessId}&quot;,&quot;capCorg&quot;:&quot;${capCorg}&quot;,&quot;crdNoLast&quot;:&quot;${crdNoLast}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;rpySeq&quot;:${caseValue},&quot;rpyOrdNo&quot;:&quot;${rpyOrdNo}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;isOverdue&quot;:&quot;${isOverdue}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;rpySts&quot;:&quot;${rpySts}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpyOrdDt&quot;:&quot;${rpyOrdDt}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.7 扣款结果通知接口---orgPlanNo===&gt;${caseName}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-2110732630">
                <stringProp name="1047176074">3.1.2.7 扣款结果通知接口</stringProp>
                <stringProp name="1939186091">{&quot;rpyDesc&quot;:&quot;${rpyDesc}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;rpyAmt&quot;:${rpyAmt},&quot;acPayTyp&quot;:&quot;${acPayTyp}&quot;,&quot;buisnessId&quot;:&quot;${buisnessId}&quot;,&quot;capCorg&quot;:&quot;${capCorg}&quot;,&quot;crdNoLast&quot;:&quot;${crdNoLast}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;rpySeq&quot;:${rpySeq},&quot;rpyOrdNo&quot;:&quot;${rpyOrdNo}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;isOverdue&quot;:&quot;${isOverdue}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;orgPlanNo&quot;:${caseValue},&quot;rpySts&quot;:&quot;${rpySts}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpyOrdDt&quot;:&quot;${rpyOrdDt}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.7 扣款结果通知接口---rpyAmt===&gt;${caseName}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="532201871">
                <stringProp name="1047176074">3.1.2.7 扣款结果通知接口</stringProp>
                <stringProp name="1075236652">{&quot;rpyDesc&quot;:&quot;${rpyDesc}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;rpyAmt&quot;:${caseValue},&quot;acPayTyp&quot;:&quot;${acPayTyp}&quot;,&quot;buisnessId&quot;:&quot;${buisnessId}&quot;,&quot;capCorg&quot;:&quot;${capCorg}&quot;,&quot;crdNoLast&quot;:&quot;${crdNoLast}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;rpySeq&quot;:${rpySeq},&quot;rpyOrdNo&quot;:&quot;${rpyOrdNo}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;isOverdue&quot;:&quot;${isOverdue}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;rpySts&quot;:&quot;${rpySts}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpyOrdDt&quot;:&quot;${rpyOrdDt}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.7 扣款结果通知接口---rpyOrdNo===&gt;${caseName}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1365741217">
                <stringProp name="1047176074">3.1.2.7 扣款结果通知接口</stringProp>
                <stringProp name="-434975796">{&quot;rpyDesc&quot;:&quot;${rpyDesc}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;rpyAmt&quot;:${rpyAmt},&quot;acPayTyp&quot;:&quot;${acPayTyp}&quot;,&quot;buisnessId&quot;:&quot;${buisnessId}&quot;,&quot;capCorg&quot;:&quot;${capCorg}&quot;,&quot;crdNoLast&quot;:&quot;${crdNoLast}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;rpySeq&quot;:${rpySeq},&quot;rpyOrdNo&quot;:${caseValue},&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;isOverdue&quot;:&quot;${isOverdue}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;rpySts&quot;:&quot;${rpySts}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpyOrdDt&quot;:&quot;${rpyOrdDt}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.7 扣款结果通知接口---rpyOrdDt===&gt;${caseName}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-127174501">
                <stringProp name="1047176074">3.1.2.7 扣款结果通知接口</stringProp>
                <stringProp name="1702106049">{&quot;rpyDesc&quot;:&quot;${rpyDesc}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;rpyAmt&quot;:${rpyAmt},&quot;acPayTyp&quot;:&quot;${acPayTyp}&quot;,&quot;buisnessId&quot;:&quot;${buisnessId}&quot;,&quot;capCorg&quot;:&quot;${capCorg}&quot;,&quot;crdNoLast&quot;:&quot;${crdNoLast}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;rpySeq&quot;:${rpySeq},&quot;rpyOrdNo&quot;:&quot;${rpyOrdNo}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;isOverdue&quot;:&quot;${isOverdue}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;rpySts&quot;:&quot;${rpySts}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpyOrdDt&quot;:${caseValue}}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.7 扣款结果通知接口---rpySts===&gt;${caseName}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1122236276">
                <stringProp name="1047176074">3.1.2.7 扣款结果通知接口</stringProp>
                <stringProp name="-480726048">{&quot;rpyDesc&quot;:&quot;${rpyDesc}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;rpyAmt&quot;:${rpyAmt},&quot;acPayTyp&quot;:&quot;${acPayTyp}&quot;,&quot;buisnessId&quot;:&quot;${buisnessId}&quot;,&quot;capCorg&quot;:&quot;${capCorg}&quot;,&quot;crdNoLast&quot;:&quot;${crdNoLast}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;rpySeq&quot;:${rpySeq},&quot;rpyOrdNo&quot;:&quot;${rpyOrdNo}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;isOverdue&quot;:&quot;${isOverdue}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;rpySts&quot;:${caseValue},&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpyOrdDt&quot;:&quot;${rpyOrdDt}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.7 扣款结果通知接口---isOverdue===&gt;${caseName}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="433500016">
                <stringProp name="1047176074">3.1.2.7 扣款结果通知接口</stringProp>
                <stringProp name="846285475">{&quot;rpyDesc&quot;:&quot;${rpyDesc}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;rpyAmt&quot;:${rpyAmt},&quot;acPayTyp&quot;:&quot;${acPayTyp}&quot;,&quot;buisnessId&quot;:&quot;${buisnessId}&quot;,&quot;capCorg&quot;:&quot;${capCorg}&quot;,&quot;crdNoLast&quot;:&quot;${crdNoLast}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;rpySeq&quot;:${rpySeq},&quot;rpyOrdNo&quot;:&quot;${rpyOrdNo}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;isOverdue&quot;:${caseValue},&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;rpySts&quot;:&quot;${rpySts}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpyOrdDt&quot;:&quot;${rpyOrdDt}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.7 扣款结果通知接口---buisnessId===&gt;${caseName}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1564707304">
                <stringProp name="1047176074">3.1.2.7 扣款结果通知接口</stringProp>
                <stringProp name="-1975615520">{&quot;rpyDesc&quot;:&quot;${rpyDesc}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;rpyAmt&quot;:${rpyAmt},&quot;acPayTyp&quot;:&quot;${acPayTyp}&quot;,&quot;buisnessId&quot;:${caseValue},&quot;capCorg&quot;:&quot;${capCorg}&quot;,&quot;crdNoLast&quot;:&quot;${crdNoLast}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;rpySeq&quot;:${rpySeq},&quot;rpyOrdNo&quot;:&quot;${rpyOrdNo}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;isOverdue&quot;:&quot;${isOverdue}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;rpySts&quot;:&quot;${rpySts}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpyOrdDt&quot;:&quot;${rpyOrdDt}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.7 扣款结果通知接口---rpyDesc===&gt;${caseName}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="991728493">
                <stringProp name="1047176074">3.1.2.7 扣款结果通知接口</stringProp>
                <stringProp name="903928951">{&quot;rpyDesc&quot;:${caseValue},&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;rpyAmt&quot;:${rpyAmt},&quot;acPayTyp&quot;:&quot;${acPayTyp}&quot;,&quot;buisnessId&quot;:&quot;${buisnessId}&quot;,&quot;capCorg&quot;:&quot;${capCorg}&quot;,&quot;crdNoLast&quot;:&quot;${crdNoLast}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;rpySeq&quot;:${rpySeq},&quot;rpyOrdNo&quot;:&quot;${rpyOrdNo}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;isOverdue&quot;:&quot;${isOverdue}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;rpySts&quot;:&quot;${rpySts}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpyOrdDt&quot;:&quot;${rpyOrdDt}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.7 扣款结果通知接口---capCorg===&gt;${caseName}非必填" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1472125529">
                <stringProp name="1047176074">3.1.2.7 扣款结果通知接口</stringProp>
                <stringProp name="-1480320002">{&quot;rpyDesc&quot;:&quot;${rpyDesc}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;rpyAmt&quot;:${rpyAmt},&quot;acPayTyp&quot;:&quot;${acPayTyp}&quot;,&quot;buisnessId&quot;:&quot;${buisnessId}&quot;,&quot;capCorg&quot;:${caseValue},&quot;crdNoLast&quot;:&quot;${crdNoLast}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;rpySeq&quot;:${rpySeq},&quot;rpyOrdNo&quot;:&quot;${rpyOrdNo}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;isOverdue&quot;:&quot;${isOverdue}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;rpySts&quot;:&quot;${rpySts}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpyOrdDt&quot;:&quot;${rpyOrdDt}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.7 扣款结果通知接口---crdNoLast===&gt;${caseName}非必填" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-162671326">
                <stringProp name="1047176074">3.1.2.7 扣款结果通知接口</stringProp>
                <stringProp name="1820897677">{&quot;rpyDesc&quot;:&quot;${rpyDesc}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;rpyAmt&quot;:${rpyAmt},&quot;acPayTyp&quot;:&quot;${acPayTyp}&quot;,&quot;buisnessId&quot;:&quot;${buisnessId}&quot;,&quot;capCorg&quot;:&quot;${capCorg}&quot;,&quot;crdNoLast&quot;:${caseValue},&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;rpySeq&quot;:${rpySeq},&quot;rpyOrdNo&quot;:&quot;${rpyOrdNo}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;isOverdue&quot;:&quot;${isOverdue}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;rpySts&quot;:&quot;${rpySts}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpyOrdDt&quot;:&quot;${rpyOrdDt}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.7 扣款结果通知接口---acPayTyp===&gt;${caseName}非必填" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1118247904">
                <stringProp name="1047176074">3.1.2.7 扣款结果通知接口</stringProp>
                <stringProp name="-1215631862">{&quot;rpyDesc&quot;:&quot;${rpyDesc}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;rpyAmt&quot;:${rpyAmt},&quot;acPayTyp&quot;:${caseValue},&quot;buisnessId&quot;:&quot;${buisnessId}&quot;,&quot;capCorg&quot;:&quot;${capCorg}&quot;,&quot;crdNoLast&quot;:&quot;${crdNoLast}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;rpySeq&quot;:${rpySeq},&quot;rpyOrdNo&quot;:&quot;${rpyOrdNo}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;isOverdue&quot;:&quot;${isOverdue}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;rpySts&quot;:&quot;${rpySts}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpyOrdDt&quot;:&quot;${rpyOrdDt}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.7 扣款结果通知接口---requestTm===&gt;${caseName}非必填" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="751761757">
                <stringProp name="1047176074">3.1.2.7 扣款结果通知接口</stringProp>
                <stringProp name="-1645560013">{&quot;rpyDesc&quot;:&quot;${rpyDesc}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;rpyAmt&quot;:${rpyAmt},&quot;acPayTyp&quot;:&quot;${acPayTyp}&quot;,&quot;buisnessId&quot;:&quot;${buisnessId}&quot;,&quot;capCorg&quot;:&quot;${capCorg}&quot;,&quot;crdNoLast&quot;:&quot;${crdNoLast}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;,&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;rpySeq&quot;:${rpySeq},&quot;rpyOrdNo&quot;:&quot;${rpyOrdNo}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;isOverdue&quot;:&quot;${isOverdue}&quot;,&quot;requestTm&quot;:${caseValue},&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;rpySts&quot;:&quot;${rpySts}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpyOrdDt&quot;:&quot;${rpyOrdDt}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.7 扣款结果通知接口---jrnNo===&gt;${caseName}非必填" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1650413085">
                <stringProp name="1047176074">3.1.2.7 扣款结果通知接口</stringProp>
                <stringProp name="1351964082">{&quot;rpyDesc&quot;:&quot;${rpyDesc}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;orgOrdNo&quot;:&quot;${orgOrdNo}&quot;,&quot;rpyAmt&quot;:${rpyAmt},&quot;acPayTyp&quot;:&quot;${acPayTyp}&quot;,&quot;buisnessId&quot;:&quot;${buisnessId}&quot;,&quot;capCorg&quot;:&quot;${capCorg}&quot;,&quot;crdNoLast&quot;:&quot;${crdNoLast}&quot;,&quot;jrnNo&quot;:${caseValue},&quot;rpyMod&quot;:&quot;${rpyMod}&quot;,&quot;rpySeq&quot;:${rpySeq},&quot;rpyOrdNo&quot;:&quot;${rpyOrdNo}&quot;,&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;isOverdue&quot;:&quot;${isOverdue}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;orgPlanNo&quot;:&quot;${orgPlanNo}&quot;,&quot;rpySts&quot;:&quot;${rpySts}&quot;,&quot;ordMod&quot;:&quot;${ordMod}&quot;,&quot;rpyOrdDt&quot;:&quot;${rpyOrdDt}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Case——3.1.2.10 资金方解冻额度接口" enabled="true"/>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">zyjk-gateway-dev.mintqtech.com</stringProp>
          <stringProp name="HTTPSampler.port">9901</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/cmpay/quota/v1/unfreeze</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">10.2.10.3</stringProp>
          <stringProp name="HTTPSampler.port">8866</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/cmpay/quota/v1/unfreeze</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="576247451">brwOrdNo</stringProp>
            <stringProp name="576247146">brwOrdDt</stringProp>
            <stringProp name="93028124">appId</stringProp>
            <stringProp name="101397639">jrnNo</stringProp>
            <stringProp name="693933416">requestTm</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="728362770">
              <stringProp name="2016705099">${brwOrdNo}</stringProp>
              <stringProp name="2016695644">${brwOrdDt}</stringProp>
              <stringProp name="-1305662344">${appId}</stringProp>
              <stringProp name="-1046207379">${jrnNo}</stringProp>
              <stringProp name="-811840068">${__time(,)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.10 资金方解冻额度接口" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1478911191">
                <stringProp name="1845587198">3.1.2.10 资金方解冻额度接口</stringProp>
                <stringProp name="-2062849798">{&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);

String encrypt_Data=Cipher.encrypt(request_json);
log.info(interfaceName+&quot;----加密后的请求数据为=====&gt;&quot;+encrypt_Data);
vars.put(&quot;request_data&quot;,encrypt_Data);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.10 资金方解冻额度接口---brwOrdNo===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1892279240">
                <stringProp name="1845587198">3.1.2.10 资金方解冻额度接口</stringProp>
                <stringProp name="465994244">{&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;brwOrdNo&quot;:${caseValue},&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">响应码非200！</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.10 资金方解冻额度接口---brwOrdDt===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1748385035">
                <stringProp name="1845587198">3.1.2.10 资金方解冻额度接口</stringProp>
                <stringProp name="223653565">{&quot;brwOrdDt&quot;:${caseValue},&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">响应码非200！</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.10 资金方解冻额度接口---appId===&gt;${caseName}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="369589129">
                <stringProp name="1845587198">3.1.2.10 资金方解冻额度接口</stringProp>
                <stringProp name="-1984683771">{&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;appId&quot;:${caseValue},&quot;jrnNo&quot;:&quot;${jrnNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">响应码非200！</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.10 资金方解冻额度接口---requestTm===&gt;${caseName}  暂不校验" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1170524145">
                <stringProp name="1845587198">3.1.2.10 资金方解冻额度接口</stringProp>
                <stringProp name="-1776123429">{&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;requestTm&quot;:${caseValue},&quot;appId&quot;:&quot;${appId}&quot;,&quot;jrnNo&quot;:&quot;${jrnNo}&quot;}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">响应码非200！</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1.2.10 资金方解冻额度接口---jrnNo===&gt;${caseName} 暂不校验" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_data}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="515839844">interfaceName</stringProp>
              <stringProp name="1302787930">request_data</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-267610787">
                <stringProp name="1845587198">3.1.2.10 资金方解冻额度接口</stringProp>
                <stringProp name="-636333094">{&quot;brwOrdDt&quot;:&quot;${brwOrdDt}&quot;,&quot;brwOrdNo&quot;:&quot;${brwOrdNo}&quot;,&quot;requestTm&quot;:&quot;${requestTm}&quot;,&quot;appId&quot;:&quot;${appId}&quot;,&quot;jrnNo&quot;:${caseValue}}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.mintq.qa.auto.xhm.cipher.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String request_json=vars.get(&quot;request_data&quot;);
log.info(interfaceName+&quot;----加密前的请求数据为=====&gt;&quot;+request_json);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">响应码非200！</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">import com.mintq.qa.auto.xhm.cipher.*;
import com.eclipsesource.json.*;

String interfaceName=vars.get(&quot;interfaceName&quot;);

String response_data=prev.getResponseDataAsString();
log.info(interfaceName+&quot;----解密前的响应数据为：=====&gt;&quot;+response_data);

//String decrypt_data=Cipher.decrypt(response_data);
//log.info(interfaceName+&quot;----解密后的响应数据为：=====&gt;&quot;+decrypt_data);

//断言
//Boolean success=Json.parse(decrypt_data).asObject().get(&quot;success&quot;).asBoolean();
//Boolean expect_success=true;
//if(success!=expect_success){
//	Failure=true;
//	FailureMessage=interfaceName+&quot;--预期success字段响应:&quot;+expect_success+&quot;，实际响应结果为&quot;+success;
//	}

//提取
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="移动和包正流程" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="UUID生成" enabled="false">
          <stringProp name="BeanShellSampler.query">import java.util.UUID;
 
UUID uuid1 = UUID.randomUUID();    //获取UID的值
 
vars.put(&quot;UUID&quot;,(uuid1.toString()).toUpperCase().replaceAll(&quot;-&quot;,&quot;&quot;));
log.info(&quot;=======&quot;+vars.get(&quot;UUID&quot;));</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="规则数据" enabled="true">
          <stringProp name="filename">HeBao_CSV_data.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">caseName,caseValue</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC删除授信信息" enabled="true">
          <stringProp name="dataSource">SqlConnHeBao</stringProp>
          <stringProp name="queryType">Prepared Update Statement</stringProp>
          <stringProp name="query">DELETE from zyjk.t_zyjk_credit_flow where qry_credit_id=&apos;${qryCreditId}&apos;;
delete from zyjk.t_zyjk_loan_info where customer_id=(select customer_id from zyjk.t_zyjk_customer where cell_phone=&apos;${cellPhone}&apos;);
DELETE from zyjk.t_zyjk_goods_return_settlement_flow;
delete from zyjk.t_zyjk_file;
delete from zyjk.t_zyjk_fund_file;
DELETE from zyjk.t_zyjk_loan_change_flow;
DELETE from zyjk.t_zyjk_repay_plan where customer_id=(select customer_id from zyjk.t_zyjk_customer where cell_phone=&apos;${cellPhone}&apos;);

delete from zyjk.t_zyjk_customer_bankcard_info where customer_id=(select customer_id from zyjk.t_zyjk_customer where cell_phone=&apos;${cellPhone}&apos;);
delete from zyjk.t_zyjk_customer_family_info where customer_id=(select customer_id from zyjk.t_zyjk_customer where cell_phone=&apos;${cellPhone}&apos;);
delete from zyjk.t_zyjk_customer_file where customer_id=(select customer_id from zyjk.t_zyjk_customer where cell_phone=&apos;${cellPhone}&apos;);
delete from zyjk.t_zyjk_customer_identify_info where customer_id=(select customer_id from zyjk.t_zyjk_customer where cell_phone=&apos;${cellPhone}&apos;);
delete from zyjk.t_zyjk_customer_job_info where customer_id=(select customer_id from zyjk.t_zyjk_customer where cell_phone=&apos;${cellPhone}&apos;);
delete from zyjk.t_zyjk_customer_refer_info where customer_id=(select customer_id from zyjk.t_zyjk_customer where cell_phone=&apos;${cellPhone}&apos;);
delete from zyjk.t_zyjk_credit_flow where customer_id=(select customer_id from zyjk.t_zyjk_customer where cell_phone=&apos;${cellPhone}&apos;);
delete from zyjk.t_zyjk_push_rc_flow where customer_id=(select customer_id from zyjk.t_zyjk_customer where cell_phone=&apos;${cellPhone}&apos;);
delete from zyjk.t_zyjk_customer where cell_phone=&apos;${cellPhone}&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Count Records</stringProp>
        </JDBCSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="582022935">
                <stringProp name="963674310">JDBC删除授信信息</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Test——授信申请接口OK" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-413880995">接口规则测试</stringProp>
            <stringProp name="1268265899">Case——授信申请接口</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Test——风控回调接口OK" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-413880995">接口规则测试</stringProp>
            <stringProp name="1019183724">Case——风控回调接口</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Test——授信结果查询接口OK" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-413880995">接口规则测试</stringProp>
            <stringProp name="897293645">Case——授信结果查询接口</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="实际出资方与查询接口" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-413880995">接口规则测试</stringProp>
            <stringProp name="-316742874">Case——借款实际出资方预查询接口</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Test——借款申请接口OK" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-413880995">接口规则测试</stringProp>
            <stringProp name="-1376734639">Case——借款申请接口</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Test——借款查询接口OK" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-413880995">接口规则测试</stringProp>
            <stringProp name="-1478222966">Case——借款查询接口</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Test——套餐办理通知接口OK" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-413880995">接口规则测试</stringProp>
            <stringProp name="906705914">Case——套餐办理通知接口</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Test——还款计划查询接口OK" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-413880995">接口规则测试</stringProp>
            <stringProp name="-1986339838">Case——还款计划查询接口</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="授信过期--存在在途订单未还清" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC修改授信过期" enabled="true">
          <stringProp name="dataSource">SqlConnHeBao</stringProp>
          <stringProp name="queryType">Prepared Update Statement</stringProp>
          <stringProp name="query">update zyjk.t_zyjk_credit_flow set rc_invalid_time=&apos;2019-07-13 16:05:14&apos; where qry_credit_id=&apos;${qryCreditId}&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Count Records</stringProp>
        </JDBCSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="582022935">
                <stringProp name="963674310">JDBC删除授信信息</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">vars.put(&quot;qryCreditId&quot;,&quot;1&quot;+vars.get(&quot;qryCreditId&quot;));
vars.put(&quot;bOrdNo&quot;,&quot;1&quot;+vars.get(&quot;bOrdNo&quot;));
log.info(&quot;授信过期后，新的qryCreditId=====》&quot;+vars.get(&quot;qryCreditId&quot;));
log.info(&quot;授信过期后，新的bOrdNo=====》&quot;+vars.get(&quot;bOrdNo&quot;));</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Test——授信申请接口OK" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-413880995">接口规则测试</stringProp>
            <stringProp name="1268265899">Case——授信申请接口</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Test——风控回调接口OK" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-413880995">接口规则测试</stringProp>
            <stringProp name="1019183724">Case——风控回调接口</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Test——授信结果查询接口OK" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-413880995">接口规则测试</stringProp>
            <stringProp name="897293645">Case——授信结果查询接口</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="实际出资方与查询接口" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-413880995">接口规则测试</stringProp>
            <stringProp name="-316742874">Case——借款实际出资方预查询接口</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Test——借款申请接口OK" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-413880995">接口规则测试</stringProp>
            <stringProp name="-1376734639">Case——借款申请接口</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="授信过期--订单均已还清" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC修改授信过期" enabled="true">
          <stringProp name="dataSource">SqlConnHeBao</stringProp>
          <stringProp name="queryType">Prepared Update Statement</stringProp>
          <stringProp name="query">update zyjk.t_zyjk_credit_flow set rc_invalid_time=&apos;2019-07-13 16:05:14&apos; where qry_credit_id=&apos;${qryCreditId}&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Count Records</stringProp>
        </JDBCSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1172758063">interface_name</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="582022935">
                <stringProp name="963674310">JDBC删除授信信息</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">vars.put(&quot;qryCreditId&quot;,&quot;2&quot;+vars.get(&quot;qryCreditId&quot;));
log.info(&quot;授信过期后，新的qryCreditId=====》&quot;+vars.get(&quot;qryCreditId&quot;));</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Test——授信申请接口OK" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-413880995">接口规则测试</stringProp>
            <stringProp name="1268265899">Case——授信申请接口</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Test——风控回调接口OK" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-413880995">接口规则测试</stringProp>
            <stringProp name="1019183724">Case——风控回调接口</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Test——授信结果查询接口OK" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-413880995">接口规则测试</stringProp>
            <stringProp name="897293645">Case——授信结果查询接口</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="实际出资方与查询接口" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-413880995">接口规则测试</stringProp>
            <stringProp name="-718414062">Case——3.1.2.11 借款实际出资方预查询接口</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Test——借款申请接口OK" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="-413880995">接口规则测试</stringProp>
            <stringProp name="-1376734639">Case——借款申请接口</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
